-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local NotificationLabel = Instance.new("TextLabel")
local CheckMark = Instance.new("ImageLabel")
local Frame = Instance.new("Frame")
local menu = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TabsFrame = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Tab1Button = Instance.new("ImageButton")
local Tab5Button = Instance.new("ImageButton")
local Tab3Button = Instance.new("ImageButton")
local Tab2Button = Instance.new("ImageButton")
local Tab7Button = Instance.new("ImageButton")
local Tab6Button = Instance.new("ImageButton")
local logo = Instance.new("ImageLabel")
local PagesFrame = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Tab1Page = Instance.new("Frame")
local VisualsLabel = Instance.new("TextLabel")
local AdminESPButton = Instance.new("TextButton")
local Box = Instance.new("TextLabel")
local Switcher = Instance.new("TextButton")
local Switch = Instance.new("Frame")
local Frame_2 = Instance.new("Frame")
local OutlineButton = Instance.new("ImageButton")
local TextLabel = Instance.new("TextLabel")
local UICorner_4 = Instance.new("UICorner")
local RainbowButton = Instance.new("ImageButton")
local TextLabel_2 = Instance.new("TextLabel")
local UICorner_5 = Instance.new("UICorner")
local Glow = Instance.new("TextLabel")
local Switcher_2 = Instance.new("TextButton")
local Switch_2 = Instance.new("Frame")
local Frame_3 = Instance.new("Frame")
local VisibleOnlyButton = Instance.new("ImageButton")
local UICorner_6 = Instance.new("UICorner")
local TextLabel_3 = Instance.new("TextLabel")
local RainbowGlowButton = Instance.new("ImageButton")
local UICorner_7 = Instance.new("UICorner")
local TextLabel_4 = Instance.new("TextLabel")
local ShowDeadOnlyButton = Instance.new("ImageButton")
local UICorner_8 = Instance.new("UICorner")
local TextLabel_5 = Instance.new("TextLabel")
local SelfGlowButton = Instance.new("ImageButton")
local UICorner_9 = Instance.new("UICorner")
local TextLabel_6 = Instance.new("TextLabel")
local ShowAliveOnlyButton = Instance.new("ImageButton")
local UICorner_10 = Instance.new("UICorner")
local TextLabel_7 = Instance.new("TextLabel")
local ShowTargetOnlyButton = Instance.new("ImageButton")
local UICorner_11 = Instance.new("UICorner")
local TextLabel_8 = Instance.new("TextLabel")
local FillGlowButton = Instance.new("ImageButton")
local UICorner_12 = Instance.new("UICorner")
local TextLabel_9 = Instance.new("TextLabel")
local Names = Instance.new("TextLabel")
local Switcher_3 = Instance.new("TextButton")
local Switch_3 = Instance.new("Frame")
local Frame_4 = Instance.new("Frame")
local NickNameButton = Instance.new("ImageButton")
local TextLabel_10 = Instance.new("TextLabel")
local UICorner_13 = Instance.new("UICorner")
local UserNameButton = Instance.new("ImageButton")
local TextLabel_11 = Instance.new("TextLabel")
local UICorner_14 = Instance.new("UICorner")
local PositionButton = Instance.new("TextButton")
local TextLabel_12 = Instance.new("TextLabel")
local PickPos = Instance.new("Frame")
local Top = Instance.new("TextButton")
local UICorner_15 = Instance.new("UICorner")
local Bottom = Instance.new("TextButton")
local UICorner_16 = Instance.new("UICorner")
local UICorner_17 = Instance.new("UICorner")
local Tab2Page = Instance.new("Frame")
local TextLabel_13 = Instance.new("TextLabel")
local AimbotFrame = Instance.new("Frame")
local AimbotButton = Instance.new("TextButton")
local ShowFov = Instance.new("ImageButton")
local ShowFOVLabel = Instance.new("TextLabel")
local LockOnLast = Instance.new("ImageButton")
local LockOnlastLabel = Instance.new("TextLabel")
local WallCheck = Instance.new("ImageButton")
local WallcheckLabel = Instance.new("TextLabel")
local SmoothingBox = Instance.new("TextBox")
local ApplySmoothingButton = Instance.new("TextButton")
local BindKeyButton = Instance.new("TextButton")
local SmoothingLabel = Instance.new("TextLabel")
local HoldToggleButton = Instance.new("TextButton")
local ColorBox = Instance.new("TextBox")
local ApplyColorButton = Instance.new("TextButton")
local ColorFovLabel = Instance.new("TextLabel")
local Tab3Page = Instance.new("Frame")
local FullbrightOFF = Instance.new("TextButton")
local RemoveShadowButton = Instance.new("TextButton")
local NoTextures = Instance.new("TextButton")
local TextLabel_14 = Instance.new("TextLabel")
local Clickwarp = Instance.new("TextLabel")
local Switcher_4 = Instance.new("TextButton")
local Switch_4 = Instance.new("Frame")
local Binder = Instance.new("TextButton")
local Hi = Instance.new("TextLabel")
local Switcher_5 = Instance.new("TextButton")
local Switch_5 = Instance.new("Frame")
local Binder_2 = Instance.new("TextButton")
local Tab4Page = Instance.new("Frame")
local TextLabel_15 = Instance.new("TextLabel")
local AntiAFKButton = Instance.new("TextButton")
local UICorner_18 = Instance.new("UICorner")
local Tab5Page = Instance.new("Frame")
local TextLabel_16 = Instance.new("TextLabel")
local Speed = Instance.new("TextLabel")
local Switcher_6 = Instance.new("TextButton")
local Switch_6 = Instance.new("Frame")
local Binder_3 = Instance.new("TextButton")
local Frame_5 = Instance.new("Frame")
local Slider = Instance.new("Frame")
local Handle = Instance.new("Frame")
local ValueLabel = Instance.new("TextLabel")
local Bar = Instance.new("Frame")
local Label = Instance.new("TextLabel")
local GodMode = Instance.new("TextLabel")
local Switcher_7 = Instance.new("TextButton")
local Switch_7 = Instance.new("Frame")
local Tab6Page = Instance.new("Frame")
local TextLabel_17 = Instance.new("TextLabel")
local Tab7Page = Instance.new("Frame")
local TextLabel_18 = Instance.new("TextLabel")
local ReloadShoot = Instance.new("TextButton")
local NoSpread = Instance.new("TextButton")
local NoReload = Instance.new("TextButton")
local InfinityAmmo = Instance.new("TextButton")
local NoReloadLabel = Instance.new("TextLabel")
local Switcher_8 = Instance.new("TextButton")
local Switch_8 = Instance.new("Frame")
local KnifeRangeExtended = Instance.new("TextLabel")
local Switcher_9 = Instance.new("TextButton")
local Switch_9 = Instance.new("Frame")
local DamageMultiplier = Instance.new("TextLabel")
local Switcher_10 = Instance.new("TextButton")
local Switch_10 = Instance.new("Frame")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.ResetOnSpawn = false

NotificationLabel.Name = "NotificationLabel"
NotificationLabel.Parent = ScreenGui
NotificationLabel.Active = true
NotificationLabel.BackgroundColor3 = Color3.fromRGB(36, 77, 41)
NotificationLabel.BackgroundTransparency = 1.000
NotificationLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
NotificationLabel.BorderSizePixel = 0
NotificationLabel.Position = UDim2.new(0.811807096, 0, 0.255768955, 0)
NotificationLabel.Size = UDim2.new(0, 281, 0, 44)
NotificationLabel.Visible = false
NotificationLabel.Font = Enum.Font.Code
NotificationLabel.Text = "    Enabled function: NoClip"
NotificationLabel.TextColor3 = Color3.fromRGB(33, 255, 17)
NotificationLabel.TextSize = 15.000
NotificationLabel.TextTransparency = 1.000
NotificationLabel.TextWrapped = true

CheckMark.Name = "CheckMark"
CheckMark.Parent = NotificationLabel
CheckMark.Active = true
CheckMark.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CheckMark.BackgroundTransparency = 1.000
CheckMark.BorderColor3 = Color3.fromRGB(0, 0, 0)
CheckMark.BorderSizePixel = 0
CheckMark.Position = UDim2.new(0.0218524225, 0, 0.0540549532, 0)
CheckMark.Size = UDim2.new(0, 45, 0, 41)
CheckMark.Image = "rbxassetid://85837052454915"

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BackgroundTransparency = 1.000
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.00180018006, 0, -0.138888896, 0)
Frame.Size = UDim2.new(0, 1109, 0, 761)

menu.Name = "menu"
menu.Parent = ScreenGui
menu.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
menu.BorderColor3 = Color3.fromRGB(0, 0, 0)
menu.BorderSizePixel = 0
menu.Position = UDim2.new(0.255665302, 0, 0.0897975713, 0)
menu.Size = UDim2.new(0, 746, 0, 585)
menu.ZIndex = 2

UICorner.Parent = menu

TabsFrame.Name = "TabsFrame"
TabsFrame.Parent = menu
TabsFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TabsFrame.BackgroundTransparency = 1.000
TabsFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
TabsFrame.BorderSizePixel = 0
TabsFrame.Position = UDim2.new(0, 0, 0.125258803, 0)
TabsFrame.Size = UDim2.new(0, 123, 0, 422)

UICorner_2.Parent = TabsFrame

Tab1Button.Name = "Tab1Button"
Tab1Button.Parent = TabsFrame
Tab1Button.BackgroundColor3 = Color3.fromRGB(0, 89, 255)
Tab1Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab1Button.BorderSizePixel = 0
Tab1Button.Position = UDim2.new(0.252032518, 0, 0.0710899755, 0)
Tab1Button.Size = UDim2.new(0, 53, 0, 54)
Tab1Button.Image = "rbxassetid://121234038341734"

Tab5Button.Name = "Tab5Button"
Tab5Button.Parent = TabsFrame
Tab5Button.BackgroundColor3 = Color3.fromRGB(0, 89, 255)
Tab5Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab5Button.BorderSizePixel = 0
Tab5Button.Position = UDim2.new(0.252032518, 0, 0.701227844, 0)
Tab5Button.Size = UDim2.new(0, 53, 0, 54)
Tab5Button.Image = "rbxassetid://128101223038569"

Tab3Button.Name = "Tab3Button"
Tab3Button.Parent = TabsFrame
Tab3Button.BackgroundColor3 = Color3.fromRGB(0, 89, 255)
Tab3Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab3Button.BorderSizePixel = 0
Tab3Button.Position = UDim2.new(0.252032518, 0, 0.540478408, 0)
Tab3Button.Size = UDim2.new(0, 53, 0, 54)
Tab3Button.Image = "rbxassetid://90030673702247"

Tab2Button.Name = "Tab2Button"
Tab2Button.Parent = TabsFrame
Tab2Button.BackgroundColor3 = Color3.fromRGB(0, 89, 255)
Tab2Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab2Button.BorderSizePixel = 0
Tab2Button.Position = UDim2.new(0.252032518, 0, 0.231839433, 0)
Tab2Button.Size = UDim2.new(0, 53, 0, 54)
Tab2Button.Image = "rbxassetid://122574553542109"

Tab7Button.Name = "Tab7Button"
Tab7Button.Parent = TabsFrame
Tab7Button.BackgroundColor3 = Color3.fromRGB(0, 89, 255)
Tab7Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab7Button.BorderSizePixel = 0
Tab7Button.Position = UDim2.new(0.252032518, 0, 0.857690692, 0)
Tab7Button.Size = UDim2.new(0, 53, 0, 54)
Tab7Button.Image = "rbxassetid://85020596341898"

Tab6Button.Name = "Tab6Button"
Tab6Button.Parent = TabsFrame
Tab6Button.BackgroundColor3 = Color3.fromRGB(0, 89, 255)
Tab6Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab6Button.BorderSizePixel = 0
Tab6Button.Position = UDim2.new(0.252032518, 0, 0.38401562, 0)
Tab6Button.Size = UDim2.new(0, 53, 0, 54)
Tab6Button.Image = "rbxassetid://79580257595150"

logo.Name = "logo"
logo.Parent = menu
logo.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
logo.BackgroundTransparency = 1.000
logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
logo.BorderSizePixel = 0
logo.Position = UDim2.new(0.0281501338, 0, 0.0170940179, 0)
logo.Rotation = 15.000
logo.Size = UDim2.new(0, 80, 0, 80)
logo.Image = "rbxassetid://107458031668839"

PagesFrame.Name = "PagesFrame"
PagesFrame.Parent = menu
PagesFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
PagesFrame.BackgroundTransparency = 1.000
PagesFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
PagesFrame.BorderSizePixel = 0
PagesFrame.Position = UDim2.new(0.174468055, 0, 0.125258833, 0)
PagesFrame.Size = UDim2.new(0, 509, 0, 421)

UICorner_3.Parent = PagesFrame

Tab1Page.Name = "Tab1Page"
Tab1Page.Parent = PagesFrame
Tab1Page.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tab1Page.BackgroundTransparency = 1.000
Tab1Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab1Page.BorderSizePixel = 0
Tab1Page.Position = UDim2.new(0.0301635973, 0, 0, 0)
Tab1Page.Size = UDim2.new(0, 493, 0, 422)
Tab1Page.Visible = false

VisualsLabel.Name = "VisualsLabel"
VisualsLabel.Parent = Tab1Page
VisualsLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
VisualsLabel.BackgroundTransparency = 1.000
VisualsLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
VisualsLabel.BorderSizePixel = 0
VisualsLabel.Position = UDim2.new(0.257606477, 0, -0.116113745, 0)
VisualsLabel.Size = UDim2.new(0, 200, 0, 50)
VisualsLabel.Font = Enum.Font.Michroma
VisualsLabel.Text = "Visuals"
VisualsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
VisualsLabel.TextSize = 24.000

AdminESPButton.Name = "AdminESPButton"
AdminESPButton.Parent = Tab1Page
AdminESPButton.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
AdminESPButton.BorderColor3 = Color3.fromRGB(53, 53, 53)
AdminESPButton.Position = UDim2.new(1.24992502, 0, 0.768602431, 0)
AdminESPButton.Size = UDim2.new(0, 166, 0, 51)
AdminESPButton.Font = Enum.Font.RobotoMono
AdminESPButton.Text = "Admin Check"
AdminESPButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AdminESPButton.TextSize = 19.000

Box.Name = "Box"
Box.Parent = Tab1Page
Box.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
Box.BorderColor3 = Color3.fromRGB(0, 0, 0)
Box.BorderSizePixel = 0
Box.Position = UDim2.new(-0.0609380938, 0, 0.068720378, 0)
Box.Size = UDim2.new(0, 208, 0, 49)
Box.Font = Enum.Font.SourceSans
Box.Text = "     BOX"
Box.TextColor3 = Color3.fromRGB(255, 255, 255)
Box.TextSize = 17.000
Box.TextXAlignment = Enum.TextXAlignment.Left

Switcher.Name = "Switcher"
Switcher.Parent = Box
Switcher.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher.BorderSizePixel = 0
Switcher.Position = UDim2.new(0.69127363, 0, 0.250964403, 0)
Switcher.Size = UDim2.new(0, 46, 0, 25)
Switcher.Font = Enum.Font.SourceSans
Switcher.Text = ""
Switcher.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher.TextSize = 14.000

Switch.Name = "Switch"
Switch.Parent = Switcher
Switch.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch.BorderSizePixel = 0
Switch.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch.Size = UDim2.new(0, 15, 0, 16)

Frame_2.Parent = Box
Frame_2.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
Frame_2.BackgroundTransparency = 1.000
Frame_2.BorderColor3 = Color3.fromRGB(20, 20, 20)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0, 0, 1.00000036, 0)
Frame_2.Size = UDim2.new(0, 208, 0, 86)

OutlineButton.Name = "OutlineButton"
OutlineButton.Parent = Frame_2
OutlineButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
OutlineButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
OutlineButton.BorderSizePixel = 0
OutlineButton.Position = UDim2.new(0.100961536, 0, 0.163830608, 0)
OutlineButton.Size = UDim2.new(0, 19, 0, 20)

TextLabel.Parent = OutlineButton
TextLabel.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(1, 0, -0.704471588, 0)
TextLabel.Size = UDim2.new(0, 72, 0, 49)
TextLabel.Font = Enum.Font.RobotoMono
TextLabel.Text = "Outline"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 14.000

UICorner_4.CornerRadius = UDim.new(5, 0)
UICorner_4.Parent = OutlineButton

RainbowButton.Name = "RainbowButton"
RainbowButton.Parent = Frame_2
RainbowButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
RainbowButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
RainbowButton.BorderSizePixel = 0
RainbowButton.Position = UDim2.new(0.100961536, 0, 0.569483936, 0)
RainbowButton.Size = UDim2.new(0, 19, 0, 20)

TextLabel_2.Parent = RainbowButton
TextLabel_2.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(1.73684216, 0, -0.850000024, 0)
TextLabel_2.Size = UDim2.new(0, 72, 0, 50)
TextLabel_2.Font = Enum.Font.RobotoMono
TextLabel_2.Text = "Rainbow Box"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextSize = 14.000

UICorner_5.CornerRadius = UDim.new(5, 0)
UICorner_5.Parent = RainbowButton

Glow.Name = "Glow"
Glow.Parent = Tab1Page
Glow.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
Glow.BorderColor3 = Color3.fromRGB(0, 0, 0)
Glow.BorderSizePixel = 0
Glow.Position = UDim2.new(-0.0609648377, 0, 0.417061597, 0)
Glow.Size = UDim2.new(0, 208, 0, 51)
Glow.Font = Enum.Font.SourceSans
Glow.Text = "     GLOW"
Glow.TextColor3 = Color3.fromRGB(255, 255, 255)
Glow.TextSize = 17.000
Glow.TextXAlignment = Enum.TextXAlignment.Left

Switcher_2.Name = "Switcher"
Switcher_2.Parent = Glow
Switcher_2.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher_2.BorderSizePixel = 0
Switcher_2.Position = UDim2.new(0.734542727, 0, 0.271372676, 0)
Switcher_2.Size = UDim2.new(0, 46, 0, 25)
Switcher_2.Font = Enum.Font.SourceSans
Switcher_2.Text = ""
Switcher_2.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher_2.TextSize = 14.000

Switch_2.Name = "Switch"
Switch_2.Parent = Switcher_2
Switch_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch_2.BorderSizePixel = 0
Switch_2.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch_2.Size = UDim2.new(0, 15, 0, 16)

Frame_3.Parent = Glow
Frame_3.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
Frame_3.BackgroundTransparency = 1.000
Frame_3.BorderColor3 = Color3.fromRGB(20, 20, 20)
Frame_3.BorderSizePixel = 0
Frame_3.Position = UDim2.new(0, 0, 1, 0)
Frame_3.Size = UDim2.new(0, 208, 0, 229)

VisibleOnlyButton.Name = "VisibleOnlyButton"
VisibleOnlyButton.Parent = Frame_3
VisibleOnlyButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
VisibleOnlyButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
VisibleOnlyButton.BorderSizePixel = 0
VisibleOnlyButton.Position = UDim2.new(0.100961536, 0, 0.0567467026, 0)
VisibleOnlyButton.Size = UDim2.new(0, 19, 0, 20)
VisibleOnlyButton.AutoButtonColor = false

UICorner_6.CornerRadius = UDim.new(5, 0)
UICorner_6.Parent = VisibleOnlyButton

TextLabel_3.Parent = VisibleOnlyButton
TextLabel_3.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Position = UDim2.new(1.73684216, 0, -0.150820926, 0)
TextLabel_3.Size = UDim2.new(0, 110, 0, 25)
TextLabel_3.Font = Enum.Font.RobotoMono
TextLabel_3.Text = "Visible Only"
TextLabel_3.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.TextSize = 14.000
TextLabel_3.TextXAlignment = Enum.TextXAlignment.Left

RainbowGlowButton.Name = "RainbowGlowButton"
RainbowGlowButton.Parent = Frame_3
RainbowGlowButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
RainbowGlowButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
RainbowGlowButton.BorderSizePixel = 0
RainbowGlowButton.Position = UDim2.new(0.100961536, 0, 0.597283483, 0)
RainbowGlowButton.Size = UDim2.new(0, 19, 0, 20)
RainbowGlowButton.AutoButtonColor = false

UICorner_7.CornerRadius = UDim.new(5, 0)
UICorner_7.Parent = RainbowGlowButton

TextLabel_4.Parent = RainbowGlowButton
TextLabel_4.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_4.BackgroundTransparency = 1.000
TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.BorderSizePixel = 0
TextLabel_4.Position = UDim2.new(1.73684216, 0, -0.150820926, 0)
TextLabel_4.Size = UDim2.new(0, 110, 0, 25)
TextLabel_4.Font = Enum.Font.RobotoMono
TextLabel_4.Text = "Rainbow Glow"
TextLabel_4.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.TextSize = 14.000
TextLabel_4.TextXAlignment = Enum.TextXAlignment.Left

ShowDeadOnlyButton.Name = "ShowDeadOnlyButton"
ShowDeadOnlyButton.Parent = Frame_3
ShowDeadOnlyButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
ShowDeadOnlyButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ShowDeadOnlyButton.BorderSizePixel = 0
ShowDeadOnlyButton.Position = UDim2.new(0.100999981, 0, 0.183100402, 0)
ShowDeadOnlyButton.Size = UDim2.new(0, 19, 0, 20)
ShowDeadOnlyButton.AutoButtonColor = false

UICorner_8.CornerRadius = UDim.new(5, 0)
UICorner_8.Parent = ShowDeadOnlyButton

TextLabel_5.Parent = ShowDeadOnlyButton
TextLabel_5.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_5.BackgroundTransparency = 1.000
TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_5.BorderSizePixel = 0
TextLabel_5.Position = UDim2.new(1.73684216, 0, -0.150820926, 0)
TextLabel_5.Size = UDim2.new(0, 110, 0, 25)
TextLabel_5.Font = Enum.Font.RobotoMono
TextLabel_5.Text = "Dead Only"
TextLabel_5.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.TextSize = 14.000
TextLabel_5.TextXAlignment = Enum.TextXAlignment.Left

SelfGlowButton.Name = "SelfGlowButton"
SelfGlowButton.Parent = Frame_3
SelfGlowButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
SelfGlowButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
SelfGlowButton.BorderSizePixel = 0
SelfGlowButton.Position = UDim2.new(0.100961536, 0, 0.31762296, 0)
SelfGlowButton.Size = UDim2.new(0, 19, 0, 20)
SelfGlowButton.AutoButtonColor = false

UICorner_9.CornerRadius = UDim.new(5, 0)
UICorner_9.Parent = SelfGlowButton

TextLabel_6.Parent = SelfGlowButton
TextLabel_6.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_6.BackgroundTransparency = 1.000
TextLabel_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_6.BorderSizePixel = 0
TextLabel_6.Position = UDim2.new(1.73684216, 0, -0.150820926, 0)
TextLabel_6.Size = UDim2.new(0, 110, 0, 25)
TextLabel_6.Font = Enum.Font.RobotoMono
TextLabel_6.Text = "Self Glow"
TextLabel_6.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_6.TextSize = 14.000
TextLabel_6.TextXAlignment = Enum.TextXAlignment.Left

ShowAliveOnlyButton.Name = "ShowAliveOnlyButton"
ShowAliveOnlyButton.Parent = Frame_3
ShowAliveOnlyButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
ShowAliveOnlyButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ShowAliveOnlyButton.BorderSizePixel = 0
ShowAliveOnlyButton.Position = UDim2.new(0.100961536, 0, 0.738928139, 0)
ShowAliveOnlyButton.Size = UDim2.new(0, 19, 0, 20)
ShowAliveOnlyButton.AutoButtonColor = false

UICorner_10.CornerRadius = UDim.new(5, 0)
UICorner_10.Parent = ShowAliveOnlyButton

TextLabel_7.Parent = ShowAliveOnlyButton
TextLabel_7.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_7.BackgroundTransparency = 1.000
TextLabel_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_7.BorderSizePixel = 0
TextLabel_7.Position = UDim2.new(1.73684216, 0, -0.150820926, 0)
TextLabel_7.Size = UDim2.new(0, 110, 0, 25)
TextLabel_7.Font = Enum.Font.RobotoMono
TextLabel_7.Text = "Alive Only"
TextLabel_7.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_7.TextSize = 14.000
TextLabel_7.TextXAlignment = Enum.TextXAlignment.Left

ShowTargetOnlyButton.Name = "ShowTargetOnlyButton"
ShowTargetOnlyButton.Parent = Frame_3
ShowTargetOnlyButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
ShowTargetOnlyButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ShowTargetOnlyButton.BorderSizePixel = 0
ShowTargetOnlyButton.Position = UDim2.new(0.100961536, 0, 0.461543322, 0)
ShowTargetOnlyButton.Size = UDim2.new(0, 19, 0, 20)
ShowTargetOnlyButton.AutoButtonColor = false

UICorner_11.CornerRadius = UDim.new(5, 0)
UICorner_11.Parent = ShowTargetOnlyButton

TextLabel_8.Parent = ShowTargetOnlyButton
TextLabel_8.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_8.BackgroundTransparency = 1.000
TextLabel_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_8.BorderSizePixel = 0
TextLabel_8.Position = UDim2.new(1.73684216, 0, -0.150820926, 0)
TextLabel_8.Size = UDim2.new(0, 110, 0, 25)
TextLabel_8.Font = Enum.Font.RobotoMono
TextLabel_8.Text = "Target Only"
TextLabel_8.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_8.TextSize = 14.000
TextLabel_8.TextXAlignment = Enum.TextXAlignment.Left

FillGlowButton.Name = "FillGlowButton"
FillGlowButton.Parent = Frame_3
FillGlowButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
FillGlowButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
FillGlowButton.BorderSizePixel = 0
FillGlowButton.Position = UDim2.new(0.100961536, 0, 0.867656887, 0)
FillGlowButton.Size = UDim2.new(0, 19, 0, 20)
FillGlowButton.AutoButtonColor = false

UICorner_12.CornerRadius = UDim.new(5, 0)
UICorner_12.Parent = FillGlowButton

TextLabel_9.Parent = FillGlowButton
TextLabel_9.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_9.BackgroundTransparency = 1.000
TextLabel_9.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_9.BorderSizePixel = 0
TextLabel_9.Position = UDim2.new(1.73684216, 0, -0.150820926, 0)
TextLabel_9.Size = UDim2.new(0, 110, 0, 25)
TextLabel_9.Font = Enum.Font.RobotoMono
TextLabel_9.Text = "Fill Glow"
TextLabel_9.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_9.TextSize = 14.000
TextLabel_9.TextXAlignment = Enum.TextXAlignment.Left

Names.Name = "Names"
Names.Parent = Tab1Page
Names.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
Names.BorderColor3 = Color3.fromRGB(0, 0, 0)
Names.BorderSizePixel = 0
Names.Position = UDim2.new(0.523326576, 0, 0.0663507134, 0)
Names.Size = UDim2.new(0, 208, 0, 51)
Names.Font = Enum.Font.SourceSans
Names.Text = "      NAMES"
Names.TextColor3 = Color3.fromRGB(255, 255, 255)
Names.TextSize = 17.000
Names.TextXAlignment = Enum.TextXAlignment.Left

Switcher_3.Name = "Switcher"
Switcher_3.Parent = Names
Switcher_3.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher_3.BorderSizePixel = 0
Switcher_3.Position = UDim2.new(0.734542727, 0, 0.271372676, 0)
Switcher_3.Size = UDim2.new(0, 46, 0, 25)
Switcher_3.Font = Enum.Font.SourceSans
Switcher_3.Text = ""
Switcher_3.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher_3.TextSize = 14.000

Switch_3.Name = "Switch"
Switch_3.Parent = Switcher_3
Switch_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch_3.BorderSizePixel = 0
Switch_3.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch_3.Size = UDim2.new(0, 15, 0, 16)

Frame_4.Parent = Names
Frame_4.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
Frame_4.BackgroundTransparency = 1.000
Frame_4.BorderColor3 = Color3.fromRGB(20, 20, 20)
Frame_4.BorderSizePixel = 0
Frame_4.Position = UDim2.new(0, 0, 1, 0)
Frame_4.Size = UDim2.new(0, 208, 0, 169)

NickNameButton.Name = "NickNameButton"
NickNameButton.Parent = Frame_4
NickNameButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
NickNameButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
NickNameButton.BorderSizePixel = 0
NickNameButton.Position = UDim2.new(0.100961536, 0, 0.0750732422, 0)
NickNameButton.Size = UDim2.new(0, 19, 0, 20)

TextLabel_10.Parent = NickNameButton
TextLabel_10.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_10.BackgroundTransparency = 1.000
TextLabel_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_10.BorderSizePixel = 0
TextLabel_10.Position = UDim2.new(1.36842108, 0, -0.634368896, 0)
TextLabel_10.Size = UDim2.new(0, 72, 0, 46)
TextLabel_10.Font = Enum.Font.RobotoMono
TextLabel_10.Text = "Nickname"
TextLabel_10.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_10.TextSize = 14.000

UICorner_13.CornerRadius = UDim.new(5, 0)
UICorner_13.Parent = NickNameButton

UserNameButton.Name = "UserNameButton"
UserNameButton.Parent = Frame_4
UserNameButton.BackgroundColor3 = Color3.fromRGB(57, 57, 57)
UserNameButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
UserNameButton.BorderSizePixel = 0
UserNameButton.Position = UDim2.new(0.100961536, 0, 0.281704336, 0)
UserNameButton.Size = UDim2.new(0, 19, 0, 20)

TextLabel_11.Parent = UserNameButton
TextLabel_11.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_11.BackgroundTransparency = 1.000
TextLabel_11.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_11.BorderSizePixel = 0
TextLabel_11.Position = UDim2.new(1.36842108, 0, -0.850000024, 0)
TextLabel_11.Size = UDim2.new(0, 72, 0, 50)
TextLabel_11.Font = Enum.Font.RobotoMono
TextLabel_11.Text = "Username"
TextLabel_11.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_11.TextSize = 14.000

UICorner_14.CornerRadius = UDim.new(5, 0)
UICorner_14.Parent = UserNameButton

PositionButton.Name = "PositionButton"
PositionButton.Parent = Frame_4
PositionButton.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
PositionButton.BorderColor3 = Color3.fromRGB(70, 70, 70)
PositionButton.Position = UDim2.new(0, 0, 0.686596394, 0)
PositionButton.Size = UDim2.new(0, 31, 0, 50)
PositionButton.Font = Enum.Font.SourceSans
PositionButton.Text = "↓"
PositionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
PositionButton.TextSize = 14.000

TextLabel_12.Parent = PositionButton
TextLabel_12.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
TextLabel_12.BackgroundTransparency = 1.000
TextLabel_12.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_12.BorderSizePixel = 0
TextLabel_12.Position = UDim2.new(1.50672174, 0, -0.0299999993, 0)
TextLabel_12.Size = UDim2.new(0, 83, 0, 50)
TextLabel_12.Font = Enum.Font.RobotoMono
TextLabel_12.Text = "Pick Position"
TextLabel_12.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_12.TextSize = 14.000

PickPos.Name = "PickPos"
PickPos.Parent = Names
PickPos.BackgroundColor3 = Color3.fromRGB(8, 8, 8)
PickPos.BorderColor3 = Color3.fromRGB(0, 0, 0)
PickPos.BorderSizePixel = 0
PickPos.Position = UDim2.new(0.188524097, 0, 1.37556553, 0)
PickPos.Size = UDim2.new(0, 125, 0, 95)
PickPos.Visible = false

Top.Name = "Top"
Top.Parent = PickPos
Top.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Top.BorderColor3 = Color3.fromRGB(14, 14, 14)
Top.BorderSizePixel = 0
Top.Position = UDim2.new(0.0229345709, 0, 0.105235212, 0)
Top.Size = UDim2.new(0, 118, 0, 34)
Top.Font = Enum.Font.RobotoMono
Top.Text = "TOP"
Top.TextColor3 = Color3.fromRGB(255, 255, 255)
Top.TextSize = 14.000

UICorner_15.Parent = Top

Bottom.Name = "Bottom"
Bottom.Parent = PickPos
Bottom.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Bottom.BorderColor3 = Color3.fromRGB(14, 14, 14)
Bottom.BorderSizePixel = 0
Bottom.Position = UDim2.new(0.0272705071, 0, 0.526287854, 0)
Bottom.Size = UDim2.new(0, 118, 0, 34)
Bottom.Font = Enum.Font.RobotoMono
Bottom.Text = "Bottom"
Bottom.TextColor3 = Color3.fromRGB(255, 255, 255)
Bottom.TextSize = 14.000

UICorner_16.Parent = Bottom

UICorner_17.Parent = PickPos

Tab2Page.Name = "Tab2Page"
Tab2Page.Parent = PagesFrame
Tab2Page.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tab2Page.BackgroundTransparency = 1.000
Tab2Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab2Page.BorderSizePixel = 0
Tab2Page.Position = UDim2.new(0.0384408757, 0, 0, 0)
Tab2Page.Size = UDim2.new(0, 489, 0, 422)
Tab2Page.Visible = false

TextLabel_13.Parent = Tab2Page
TextLabel_13.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_13.BackgroundTransparency = 1.000
TextLabel_13.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_13.BorderSizePixel = 0
TextLabel_13.Position = UDim2.new(0.25147146, 0, -0.116113745, 0)
TextLabel_13.Size = UDim2.new(0, 200, 0, 50)
TextLabel_13.Font = Enum.Font.Michroma
TextLabel_13.Text = "Combat"
TextLabel_13.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_13.TextSize = 24.000

AimbotFrame.Name = "AimbotFrame"
AimbotFrame.Parent = Tab2Page
AimbotFrame.Active = true
AimbotFrame.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
AimbotFrame.BorderColor3 = Color3.fromRGB(53, 53, 53)
AimbotFrame.Position = UDim2.new(-0.036809817, 0, 0.0379146934, 0)
AimbotFrame.Size = UDim2.new(0, 199, 0, 435)

AimbotButton.Name = "AimbotButton"
AimbotButton.Parent = AimbotFrame
AimbotButton.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
AimbotButton.BorderColor3 = Color3.fromRGB(53, 53, 53)
AimbotButton.Position = UDim2.new(0.284004569, -50, 0.0739306957, -25)
AimbotButton.Size = UDim2.new(0, 184, 0, 52)
AimbotButton.Font = Enum.Font.RobotoMono
AimbotButton.Text = "Aimbot"
AimbotButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AimbotButton.TextSize = 19.000

ShowFov.Name = "ShowFov"
ShowFov.Parent = AimbotFrame
ShowFov.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ShowFov.BorderColor3 = Color3.fromRGB(0, 0, 0)
ShowFov.BorderSizePixel = 0
ShowFov.Position = UDim2.new(0.804020107, 0, 0.193103448, 0)
ShowFov.Size = UDim2.new(0, 30, 0, 30)
ShowFov.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

ShowFOVLabel.Name = "ShowFOVLabel"
ShowFOVLabel.Parent = AimbotFrame
ShowFOVLabel.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
ShowFOVLabel.BackgroundTransparency = 1.000
ShowFOVLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ShowFOVLabel.BorderSizePixel = 0
ShowFOVLabel.Position = UDim2.new(0.0904522613, 0, 0.170114949, 0)
ShowFOVLabel.Size = UDim2.new(0, 78, 0, 50)
ShowFOVLabel.Font = Enum.Font.RobotoMono
ShowFOVLabel.Text = "Show FOV"
ShowFOVLabel.TextColor3 = Color3.fromRGB(248, 248, 248)
ShowFOVLabel.TextSize = 14.000

LockOnLast.Name = "LockOnLast"
LockOnLast.Parent = AimbotFrame
LockOnLast.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LockOnLast.BorderColor3 = Color3.fromRGB(0, 0, 0)
LockOnLast.BorderSizePixel = 0
LockOnLast.Position = UDim2.new(0.804020107, 0, 0.294252872, 0)
LockOnLast.Size = UDim2.new(0, 30, 0, 30)
LockOnLast.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

LockOnlastLabel.Name = "LockOnlastLabel"
LockOnlastLabel.Parent = AimbotFrame
LockOnlastLabel.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
LockOnlastLabel.BackgroundTransparency = 1.000
LockOnlastLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
LockOnlastLabel.BorderSizePixel = 0
LockOnlastLabel.Position = UDim2.new(0.0904522613, 0, 0.271264374, 0)
LockOnlastLabel.Size = UDim2.new(0, 78, 0, 50)
LockOnlastLabel.Font = Enum.Font.RobotoMono
LockOnlastLabel.Text = "Lock on Last"
LockOnlastLabel.TextColor3 = Color3.fromRGB(248, 248, 248)
LockOnlastLabel.TextSize = 14.000

WallCheck.Name = "WallCheck"
WallCheck.Parent = AimbotFrame
WallCheck.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
WallCheck.BorderColor3 = Color3.fromRGB(0, 0, 0)
WallCheck.BorderSizePixel = 0
WallCheck.Position = UDim2.new(0.804020107, 0, 0.395402312, 0)
WallCheck.Size = UDim2.new(0, 30, 0, 30)
WallCheck.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"

WallcheckLabel.Name = "WallcheckLabel"
WallcheckLabel.Parent = AimbotFrame
WallcheckLabel.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
WallcheckLabel.BackgroundTransparency = 1.000
WallcheckLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
WallcheckLabel.BorderSizePixel = 0
WallcheckLabel.Position = UDim2.new(0.0753768831, 0, 0.372413784, 0)
WallcheckLabel.Size = UDim2.new(0, 78, 0, 50)
WallcheckLabel.Font = Enum.Font.RobotoMono
WallcheckLabel.Text = "Wallcheck"
WallcheckLabel.TextColor3 = Color3.fromRGB(248, 248, 248)
WallcheckLabel.TextSize = 14.000

SmoothingBox.Name = "SmoothingBox"
SmoothingBox.Parent = AimbotFrame
SmoothingBox.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
SmoothingBox.BorderColor3 = Color3.fromRGB(94, 94, 94)
SmoothingBox.Position = UDim2.new(0.643216074, 0, 0.487356335, 0)
SmoothingBox.Size = UDim2.new(0, 62, 0, 50)
SmoothingBox.Font = Enum.Font.SourceSans
SmoothingBox.Text = ""
SmoothingBox.TextColor3 = Color3.fromRGB(255, 255, 255)
SmoothingBox.TextSize = 14.000

ApplySmoothingButton.Name = "ApplySmoothingButton"
ApplySmoothingButton.Parent = AimbotFrame
ApplySmoothingButton.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
ApplySmoothingButton.BackgroundTransparency = 1.000
ApplySmoothingButton.BorderColor3 = Color3.fromRGB(53, 53, 53)
ApplySmoothingButton.Position = UDim2.new(0.48241207, 0, 0.618390799, 0)
ApplySmoothingButton.Size = UDim2.new(0, 94, 0, 28)
ApplySmoothingButton.Font = Enum.Font.SourceSans
ApplySmoothingButton.Text = "Apply Smoothing"
ApplySmoothingButton.TextColor3 = Color3.fromRGB(252, 252, 252)
ApplySmoothingButton.TextSize = 13.000

BindKeyButton.Name = "BindKeyButton"
BindKeyButton.Parent = AimbotFrame
BindKeyButton.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
BindKeyButton.BorderColor3 = Color3.fromRGB(53, 53, 53)
BindKeyButton.Position = UDim2.new(0.268929183, -50, 0.952091634, -25)
BindKeyButton.Size = UDim2.new(0, 89, 0, 42)
BindKeyButton.Font = Enum.Font.RobotoMono
BindKeyButton.Text = "Bind Aimbot"
BindKeyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
BindKeyButton.TextSize = 13.000

SmoothingLabel.Name = "SmoothingLabel"
SmoothingLabel.Parent = AimbotFrame
SmoothingLabel.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
SmoothingLabel.BackgroundTransparency = 1.000
SmoothingLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
SmoothingLabel.BorderSizePixel = 0
SmoothingLabel.Position = UDim2.new(0.0753768831, 0, 0.487356335, 0)
SmoothingLabel.Size = UDim2.new(0, 78, 0, 50)
SmoothingLabel.Font = Enum.Font.RobotoMono
SmoothingLabel.Text = "Smoothing"
SmoothingLabel.TextColor3 = Color3.fromRGB(248, 248, 248)
SmoothingLabel.TextSize = 14.000

HoldToggleButton.Name = "HoldToggleButton"
HoldToggleButton.Parent = AimbotFrame
HoldToggleButton.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
HoldToggleButton.BorderColor3 = Color3.fromRGB(53, 53, 53)
HoldToggleButton.Position = UDim2.new(0.284004569, -50, 0.673930705, -25)
HoldToggleButton.Size = UDim2.new(0, 89, 0, 42)
HoldToggleButton.Font = Enum.Font.RobotoMono
HoldToggleButton.Text = "Hold/Toggle"
HoldToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
HoldToggleButton.TextSize = 13.000

ColorBox.Name = "ColorBox"
ColorBox.Parent = AimbotFrame
ColorBox.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
ColorBox.BorderColor3 = Color3.fromRGB(94, 94, 94)
ColorBox.Position = UDim2.new(0.643216074, 0, 0.731034458, 0)
ColorBox.Size = UDim2.new(0, 62, 0, 50)
ColorBox.Font = Enum.Font.SourceSans
ColorBox.Text = ""
ColorBox.TextColor3 = Color3.fromRGB(255, 255, 255)
ColorBox.TextSize = 14.000

ApplyColorButton.Name = "ApplyColorButton"
ApplyColorButton.Parent = AimbotFrame
ApplyColorButton.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
ApplyColorButton.BackgroundTransparency = 1.000
ApplyColorButton.BorderColor3 = Color3.fromRGB(53, 53, 53)
ApplyColorButton.Position = UDim2.new(0.48241207, 0, 0.868965507, 0)
ApplyColorButton.Size = UDim2.new(0, 94, 0, 28)
ApplyColorButton.Font = Enum.Font.SourceSans
ApplyColorButton.Text = "Apply FOV Color"
ApplyColorButton.TextColor3 = Color3.fromRGB(252, 252, 252)
ApplyColorButton.TextSize = 13.000

ColorFovLabel.Name = "ColorFovLabel"
ColorFovLabel.Parent = AimbotFrame
ColorFovLabel.BackgroundColor3 = Color3.fromRGB(4, 4, 4)
ColorFovLabel.BackgroundTransparency = 1.000
ColorFovLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ColorFovLabel.BorderSizePixel = 0
ColorFovLabel.Position = UDim2.new(0.0603015088, 0, 0.731034458, 0)
ColorFovLabel.Size = UDim2.new(0, 78, 0, 50)
ColorFovLabel.Font = Enum.Font.RobotoMono
ColorFovLabel.Text = "FOV Color"
ColorFovLabel.TextColor3 = Color3.fromRGB(248, 248, 248)
ColorFovLabel.TextSize = 14.000

Tab3Page.Name = "Tab3Page"
Tab3Page.Parent = PagesFrame
Tab3Page.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tab3Page.BackgroundTransparency = 1.000
Tab3Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab3Page.BorderSizePixel = 0
Tab3Page.Position = UDim2.new(0.0301635973, 0, 0, 0)
Tab3Page.Size = UDim2.new(0, 493, 0, 422)
Tab3Page.Visible = false

FullbrightOFF.Name = "Fullbright OFF"
FullbrightOFF.Parent = Tab3Page
FullbrightOFF.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
FullbrightOFF.BorderColor3 = Color3.fromRGB(53, 53, 53)
FullbrightOFF.Position = UDim2.new(0.0389717519, -50, 0.449079096, -25)
FullbrightOFF.Size = UDim2.new(0, 263, 0, 51)
FullbrightOFF.Font = Enum.Font.RobotoMono
FullbrightOFF.Text = "Fullbright OFF"
FullbrightOFF.TextColor3 = Color3.fromRGB(255, 255, 255)
FullbrightOFF.TextSize = 19.000

RemoveShadowButton.Name = "RemoveShadowButton"
RemoveShadowButton.Parent = Tab3Page
RemoveShadowButton.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
RemoveShadowButton.BorderColor3 = Color3.fromRGB(53, 53, 53)
RemoveShadowButton.Position = UDim2.new(0.0389717519, -50, 0.601189196, -25)
RemoveShadowButton.Size = UDim2.new(0, 263, 0, 51)
RemoveShadowButton.Font = Enum.Font.RobotoMono
RemoveShadowButton.Text = "NoShadow OFF"
RemoveShadowButton.TextColor3 = Color3.fromRGB(255, 255, 255)
RemoveShadowButton.TextSize = 19.000

NoTextures.Name = "NoTextures"
NoTextures.Parent = Tab3Page
NoTextures.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
NoTextures.BorderColor3 = Color3.fromRGB(53, 53, 53)
NoTextures.Position = UDim2.new(0.0389717519, -50, 0.750630438, -25)
NoTextures.Size = UDim2.new(0, 263, 0, 51)
NoTextures.Font = Enum.Font.RobotoMono
NoTextures.Text = "Remove Textures OFF"
NoTextures.TextColor3 = Color3.fromRGB(255, 255, 255)
NoTextures.TextSize = 19.000

TextLabel_14.Parent = Tab3Page
TextLabel_14.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_14.BackgroundTransparency = 1.000
TextLabel_14.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_14.BorderSizePixel = 0
TextLabel_14.Position = UDim2.new(0.257606477, 0, -0.120853081, 0)
TextLabel_14.Size = UDim2.new(0, 200, 0, 50)
TextLabel_14.Font = Enum.Font.Michroma
TextLabel_14.Text = "World"
TextLabel_14.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_14.TextSize = 24.000

Clickwarp.Name = "Clickwarp"
Clickwarp.Parent = Tab3Page
Clickwarp.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
Clickwarp.BorderColor3 = Color3.fromRGB(0, 0, 0)
Clickwarp.BorderSizePixel = 0
Clickwarp.Position = UDim2.new(-0.0609380938, 0, 0.229857817, 0)
Clickwarp.Size = UDim2.new(0, 263, 0, 51)
Clickwarp.Font = Enum.Font.SourceSans
Clickwarp.Text = "     CLICKWARP"
Clickwarp.TextColor3 = Color3.fromRGB(255, 255, 255)
Clickwarp.TextSize = 17.000
Clickwarp.TextXAlignment = Enum.TextXAlignment.Left

Switcher_4.Name = "Switcher"
Switcher_4.Parent = Clickwarp
Switcher_4.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher_4.BorderSizePixel = 0
Switcher_4.Position = UDim2.new(0.734542727, 0, 0.271372676, 0)
Switcher_4.Size = UDim2.new(0, 46, 0, 25)
Switcher_4.Font = Enum.Font.SourceSans
Switcher_4.Text = ""
Switcher_4.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher_4.TextSize = 14.000

Switch_4.Name = "Switch"
Switch_4.Parent = Switcher_4
Switch_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch_4.BorderSizePixel = 0
Switch_4.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch_4.Size = UDim2.new(0, 15, 0, 16)

Binder.Name = "Binder"
Binder.Parent = Clickwarp
Binder.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
Binder.BackgroundTransparency = 0.500
Binder.BorderColor3 = Color3.fromRGB(0, 0, 0)
Binder.BorderSizePixel = 0
Binder.Position = UDim2.new(0.525417328, 0, 0.271372467, 0)
Binder.Size = UDim2.new(0, 46, 0, 25)
Binder.Font = Enum.Font.Arial
Binder.Text = "BIND"
Binder.TextColor3 = Color3.fromRGB(255, 255, 255)
Binder.TextSize = 12.000

Hi.Name = "Hi"
Hi.Parent = Tab3Page
Hi.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
Hi.BorderColor3 = Color3.fromRGB(0, 0, 0)
Hi.BorderSizePixel = 0
Hi.Position = UDim2.new(-0.0609380938, 0, 0.0805687234, 0)
Hi.Size = UDim2.new(0, 263, 0, 51)
Hi.Font = Enum.Font.SourceSans
Hi.Text = "      NOCLIP"
Hi.TextColor3 = Color3.fromRGB(255, 255, 255)
Hi.TextSize = 17.000
Hi.TextXAlignment = Enum.TextXAlignment.Left

Switcher_5.Name = "Switcher"
Switcher_5.Parent = Hi
Switcher_5.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher_5.BorderSizePixel = 0
Switcher_5.Position = UDim2.new(0.734542727, 0, 0.271372676, 0)
Switcher_5.Size = UDim2.new(0, 46, 0, 25)
Switcher_5.Font = Enum.Font.SourceSans
Switcher_5.Text = ""
Switcher_5.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher_5.TextSize = 14.000

Switch_5.Name = "Switch"
Switch_5.Parent = Switcher_5
Switch_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch_5.BorderSizePixel = 0
Switch_5.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch_5.Size = UDim2.new(0, 15, 0, 16)

Binder_2.Name = "Binder"
Binder_2.Parent = Hi
Binder_2.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
Binder_2.BackgroundTransparency = 0.500
Binder_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Binder_2.BorderSizePixel = 0
Binder_2.Position = UDim2.new(0.525417328, 0, 0.271372467, 0)
Binder_2.Size = UDim2.new(0, 46, 0, 25)
Binder_2.Font = Enum.Font.Arial
Binder_2.Text = "BIND"
Binder_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Binder_2.TextSize = 12.000

Tab4Page.Name = "Tab4Page"
Tab4Page.Parent = PagesFrame
Tab4Page.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tab4Page.BackgroundTransparency = 1.000
Tab4Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab4Page.BorderSizePixel = 0
Tab4Page.Size = UDim2.new(0, 509, 0, 422)
Tab4Page.Visible = false

TextLabel_15.Parent = Tab4Page
TextLabel_15.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_15.BackgroundTransparency = 1.000
TextLabel_15.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_15.BorderSizePixel = 0
TextLabel_15.Position = UDim2.new(0.279217482, 0, -0.116113745, 0)
TextLabel_15.Size = UDim2.new(0, 200, 0, 50)
TextLabel_15.Font = Enum.Font.Michroma
TextLabel_15.Text = "Mics"
TextLabel_15.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_15.TextSize = 24.000

AntiAFKButton.Name = "AntiAFKButton"
AntiAFKButton.Parent = Tab4Page
AntiAFKButton.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
AntiAFKButton.BorderColor3 = Color3.fromRGB(53, 53, 53)
AntiAFKButton.BorderSizePixel = 2
AntiAFKButton.Position = UDim2.new(0.0154639175, 0, -0.000765398203, 0)
AntiAFKButton.Size = UDim2.new(0, 123, 0, 61)
AntiAFKButton.ZIndex = 50
AntiAFKButton.Font = Enum.Font.Ubuntu
AntiAFKButton.Text = "AntiAFK"
AntiAFKButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiAFKButton.TextSize = 15.000

UICorner_18.Parent = AntiAFKButton

Tab5Page.Name = "Tab5Page"
Tab5Page.Parent = PagesFrame
Tab5Page.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tab5Page.BackgroundTransparency = 1.000
Tab5Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab5Page.BorderSizePixel = 0
Tab5Page.Size = UDim2.new(0, 509, 0, 422)

TextLabel_16.Parent = Tab5Page
TextLabel_16.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_16.BackgroundTransparency = 1.000
TextLabel_16.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_16.BorderSizePixel = 0
TextLabel_16.Position = UDim2.new(0.279217482, 0, -0.116113745, 0)
TextLabel_16.Size = UDim2.new(0, 200, 0, 50)
TextLabel_16.Font = Enum.Font.Michroma
TextLabel_16.Text = "Character"
TextLabel_16.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_16.TextSize = 24.000

Speed.Name = "Speed"
Speed.Parent = Tab5Page
Speed.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
Speed.BorderColor3 = Color3.fromRGB(0, 0, 0)
Speed.BorderSizePixel = 0
Speed.Position = UDim2.new(-0.0275392067, 0, 0.068720378, 0)
Speed.Size = UDim2.new(0, 263, 0, 51)
Speed.Font = Enum.Font.SourceSans
Speed.Text = "      CHARACTER SPEED"
Speed.TextColor3 = Color3.fromRGB(255, 255, 255)
Speed.TextSize = 17.000
Speed.TextXAlignment = Enum.TextXAlignment.Left

Switcher_6.Name = "Switcher"
Switcher_6.Parent = Speed
Switcher_6.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher_6.BorderSizePixel = 0
Switcher_6.Position = UDim2.new(0.734542727, 0, 0.271372676, 0)
Switcher_6.Size = UDim2.new(0, 46, 0, 25)
Switcher_6.Font = Enum.Font.SourceSans
Switcher_6.Text = ""
Switcher_6.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher_6.TextSize = 14.000

Switch_6.Name = "Switch"
Switch_6.Parent = Switcher_6
Switch_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch_6.BorderSizePixel = 0
Switch_6.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch_6.Size = UDim2.new(0, 15, 0, 16)

Binder_3.Name = "Binder"
Binder_3.Parent = Speed
Binder_3.BackgroundColor3 = Color3.fromRGB(52, 52, 52)
Binder_3.BackgroundTransparency = 0.500
Binder_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
Binder_3.BorderSizePixel = 0
Binder_3.Position = UDim2.new(0.525417328, 0, 0.271372467, 0)
Binder_3.Size = UDim2.new(0, 46, 0, 25)
Binder_3.Font = Enum.Font.Arial
Binder_3.Text = "BIND"
Binder_3.TextColor3 = Color3.fromRGB(255, 255, 255)
Binder_3.TextSize = 12.000

Frame_5.Parent = Speed
Frame_5.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
Frame_5.BorderColor3 = Color3.fromRGB(20, 20, 20)
Frame_5.BorderSizePixel = 0
Frame_5.Position = UDim2.new(0, 0, 1, 0)
Frame_5.Size = UDim2.new(0, 263, 0, 71)

Slider.Name = "Slider"
Slider.Parent = Speed
Slider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Slider.BorderColor3 = Color3.fromRGB(20, 20, 20)
Slider.Position = UDim2.new(0.0986200497, 0, 1.34861004, 0)
Slider.Size = UDim2.new(0, 210, 0, 26)

Handle.Name = "Handle"
Handle.Parent = Slider
Handle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Handle.BorderColor3 = Color3.fromRGB(0, 0, 0)
Handle.BorderSizePixel = 0
Handle.Position = UDim2.new(0.0619047619, 0, 0.15384616, 0)
Handle.Size = UDim2.new(0, 17, 0, 17)

ValueLabel.Name = "ValueLabel"
ValueLabel.Parent = Slider
ValueLabel.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
ValueLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ValueLabel.BorderSizePixel = 0
ValueLabel.Position = UDim2.new(0.104761906, 0, 1.23076928, 0)
ValueLabel.Size = UDim2.new(0, 165, 0, 15)
ValueLabel.Font = Enum.Font.Michroma
ValueLabel.Text = "16"
ValueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
ValueLabel.TextSize = 14.000

Bar.Name = "Bar"
Bar.Parent = Slider
Bar.Active = true
Bar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Bar.BorderColor3 = Color3.fromRGB(0, 0, 0)
Bar.BorderSizePixel = 0
Bar.Position = UDim2.new(0.0380952395, 0, 0.269230783, 0)
Bar.Size = UDim2.new(0, 187, 0, 11)
Bar.Visible = false

Label.Name = "Label"
Label.Parent = Slider
Label.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
Label.BorderColor3 = Color3.fromRGB(0, 0, 0)
Label.BorderSizePixel = 0
Label.Position = UDim2.new(0.10952381, 0, -0.692308307, 0)
Label.Size = UDim2.new(0, 165, 0, 15)
Label.Font = Enum.Font.Michroma
Label.Text = "Speed Value"
Label.TextColor3 = Color3.fromRGB(255, 255, 255)
Label.TextSize = 14.000

GodMode.Name = "GodMode"
GodMode.Parent = Tab5Page
GodMode.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
GodMode.BorderColor3 = Color3.fromRGB(0, 0, 0)
GodMode.BorderSizePixel = 0
GodMode.Position = UDim2.new(-0.0314684808, 0, 0.383886248, 0)
GodMode.Size = UDim2.new(0, 263, 0, 51)
GodMode.Font = Enum.Font.SourceSans
GodMode.Text = "      GODMODE"
GodMode.TextColor3 = Color3.fromRGB(255, 255, 255)
GodMode.TextSize = 17.000
GodMode.TextXAlignment = Enum.TextXAlignment.Left

Switcher_7.Name = "Switcher"
Switcher_7.Parent = GodMode
Switcher_7.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher_7.BorderSizePixel = 0
Switcher_7.Position = UDim2.new(0.734542727, 0, 0.271372676, 0)
Switcher_7.Size = UDim2.new(0, 46, 0, 25)
Switcher_7.Font = Enum.Font.SourceSans
Switcher_7.Text = ""
Switcher_7.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher_7.TextSize = 14.000

Switch_7.Name = "Switch"
Switch_7.Parent = Switcher_7
Switch_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch_7.BorderSizePixel = 0
Switch_7.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch_7.Size = UDim2.new(0, 15, 0, 16)

Tab6Page.Name = "Tab6Page"
Tab6Page.Parent = PagesFrame
Tab6Page.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tab6Page.BackgroundTransparency = 1.000
Tab6Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab6Page.BorderSizePixel = 0
Tab6Page.Size = UDim2.new(0, 509, 0, 422)
Tab6Page.Visible = false

TextLabel_17.Parent = Tab6Page
TextLabel_17.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_17.BackgroundTransparency = 1.000
TextLabel_17.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_17.BorderSizePixel = 0
TextLabel_17.Position = UDim2.new(0.279217482, 0, -0.116113745, 0)
TextLabel_17.Size = UDim2.new(0, 200, 0, 50)
TextLabel_17.Font = Enum.Font.Michroma
TextLabel_17.Text = "Vehicle"
TextLabel_17.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_17.TextSize = 24.000

Tab7Page.Name = "Tab7Page"
Tab7Page.Parent = PagesFrame
Tab7Page.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Tab7Page.BackgroundTransparency = 1.000
Tab7Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
Tab7Page.BorderSizePixel = 0
Tab7Page.Size = UDim2.new(0, 509, 0, 422)
Tab7Page.Visible = false

TextLabel_18.Parent = Tab7Page
TextLabel_18.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_18.BackgroundTransparency = 1.000
TextLabel_18.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_18.BorderSizePixel = 0
TextLabel_18.Position = UDim2.new(0.279217482, 0, -0.116113745, 0)
TextLabel_18.Size = UDim2.new(0, 200, 0, 50)
TextLabel_18.Font = Enum.Font.Michroma
TextLabel_18.Text = "Weapon"
TextLabel_18.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_18.TextSize = 24.000

ReloadShoot.Name = "ReloadShoot"
ReloadShoot.Parent = Tab7Page
ReloadShoot.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
ReloadShoot.BorderColor3 = Color3.fromRGB(53, 53, 53)
ReloadShoot.Position = UDim2.new(0.083557725, -50, 0.556317687, -25)
ReloadShoot.Size = UDim2.new(0, 166, 0, 51)
ReloadShoot.Font = Enum.Font.RobotoMono
ReloadShoot.Text = "No Reload OFF"
ReloadShoot.TextColor3 = Color3.fromRGB(255, 255, 255)
ReloadShoot.TextSize = 19.000

NoSpread.Name = "NoSpread"
NoSpread.Parent = Tab7Page
NoSpread.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
NoSpread.BorderColor3 = Color3.fromRGB(53, 53, 53)
NoSpread.Position = UDim2.new(0.083557725, -50, 0.402289212, -25)
NoSpread.Size = UDim2.new(0, 166, 0, 51)
NoSpread.Font = Enum.Font.RobotoMono
NoSpread.Text = "No Spread OFF"
NoSpread.TextColor3 = Color3.fromRGB(255, 255, 255)
NoSpread.TextSize = 19.000

NoReload.Name = "NoReload"
NoReload.Parent = Tab7Page
NoReload.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
NoReload.BorderColor3 = Color3.fromRGB(53, 53, 53)
NoReload.Position = UDim2.new(0.083557725, -50, 0.25300011, -25)
NoReload.Size = UDim2.new(0, 166, 0, 51)
NoReload.Font = Enum.Font.RobotoMono
NoReload.Text = "No Reload OFF"
NoReload.TextColor3 = Color3.fromRGB(255, 255, 255)
NoReload.TextSize = 19.000

InfinityAmmo.Name = "InfinityAmmo"
InfinityAmmo.Parent = Tab7Page
InfinityAmmo.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
InfinityAmmo.BorderColor3 = Color3.fromRGB(53, 53, 53)
InfinityAmmo.Position = UDim2.new(0.083557792, -50, 0.0989716873, -25)
InfinityAmmo.Size = UDim2.new(0, 166, 0, 51)
InfinityAmmo.Font = Enum.Font.RobotoMono
InfinityAmmo.Text = "Infinity Ammo OFF"
InfinityAmmo.TextColor3 = Color3.fromRGB(255, 255, 255)
InfinityAmmo.TextSize = 19.000

NoReloadLabel.Name = "NoReloadLabel"
NoReloadLabel.Parent = Tab7Page
NoReloadLabel.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
NoReloadLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
NoReloadLabel.BorderSizePixel = 0
NoReloadLabel.Position = UDim2.new(-0.0158418007, 0, 0.646919429, 0)
NoReloadLabel.Size = UDim2.new(0, 263, 0, 51)
NoReloadLabel.Font = Enum.Font.SourceSans
NoReloadLabel.Text = "     NO RELOAD"
NoReloadLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
NoReloadLabel.TextSize = 17.000
NoReloadLabel.TextXAlignment = Enum.TextXAlignment.Left

Switcher_8.Name = "Switcher"
Switcher_8.Parent = NoReloadLabel
Switcher_8.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher_8.BorderSizePixel = 0
Switcher_8.Position = UDim2.new(0.734542727, 0, 0.271372676, 0)
Switcher_8.Size = UDim2.new(0, 46, 0, 25)
Switcher_8.Font = Enum.Font.SourceSans
Switcher_8.Text = ""
Switcher_8.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher_8.TextSize = 14.000

Switch_8.Name = "Switch"
Switch_8.Parent = Switcher_8
Switch_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch_8.BorderSizePixel = 0
Switch_8.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch_8.Size = UDim2.new(0, 15, 0, 16)

KnifeRangeExtended.Name = "KnifeRangeExtended"
KnifeRangeExtended.Parent = Tab7Page
KnifeRangeExtended.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
KnifeRangeExtended.BorderColor3 = Color3.fromRGB(0, 0, 0)
KnifeRangeExtended.BorderSizePixel = 0
KnifeRangeExtended.Position = UDim2.new(-0.0177160241, 0, 0.791469216, 0)
KnifeRangeExtended.Size = UDim2.new(0, 263, 0, 51)
KnifeRangeExtended.Font = Enum.Font.SourceSans
KnifeRangeExtended.Text = "      KNIFE RANGE EX.."
KnifeRangeExtended.TextColor3 = Color3.fromRGB(255, 255, 255)
KnifeRangeExtended.TextSize = 17.000
KnifeRangeExtended.TextXAlignment = Enum.TextXAlignment.Left

Switcher_9.Name = "Switcher"
Switcher_9.Parent = KnifeRangeExtended
Switcher_9.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher_9.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher_9.BorderSizePixel = 0
Switcher_9.Position = UDim2.new(0.734542727, 0, 0.271372676, 0)
Switcher_9.Size = UDim2.new(0, 46, 0, 25)
Switcher_9.Font = Enum.Font.SourceSans
Switcher_9.Text = ""
Switcher_9.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher_9.TextSize = 14.000

Switch_9.Name = "Switch"
Switch_9.Parent = Switcher_9
Switch_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch_9.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch_9.BorderSizePixel = 0
Switch_9.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch_9.Size = UDim2.new(0, 15, 0, 16)

DamageMultiplier.Name = "DamageMultiplier"
DamageMultiplier.Parent = Tab7Page
DamageMultiplier.BackgroundColor3 = Color3.fromRGB(12, 12, 12)
DamageMultiplier.BorderColor3 = Color3.fromRGB(0, 0, 0)
DamageMultiplier.BorderSizePixel = 0
DamageMultiplier.Position = UDim2.new(-0.0177160241, 0, 0.940758288, 0)
DamageMultiplier.Size = UDim2.new(0, 263, 0, 51)
DamageMultiplier.Font = Enum.Font.SourceSans
DamageMultiplier.Text = "      DAMAGE MULTIPLIER"
DamageMultiplier.TextColor3 = Color3.fromRGB(255, 255, 255)
DamageMultiplier.TextSize = 17.000
DamageMultiplier.TextXAlignment = Enum.TextXAlignment.Left

Switcher_10.Name = "Switcher"
Switcher_10.Parent = DamageMultiplier
Switcher_10.BackgroundColor3 = Color3.fromRGB(74, 74, 74)
Switcher_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switcher_10.BorderSizePixel = 0
Switcher_10.Position = UDim2.new(0.734542727, 0, 0.271372676, 0)
Switcher_10.Size = UDim2.new(0, 46, 0, 25)
Switcher_10.Font = Enum.Font.SourceSans
Switcher_10.Text = ""
Switcher_10.TextColor3 = Color3.fromRGB(0, 0, 0)
Switcher_10.TextSize = 14.000

Switch_10.Name = "Switch"
Switch_10.Parent = Switcher_10
Switch_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Switch_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
Switch_10.BorderSizePixel = 0
Switch_10.Position = UDim2.new(0.130999997, 0, 0.200000003, 0)
Switch_10.Size = UDim2.new(0, 15, 0, 16)

-- Scripts:

local function ITDA_fake_script() -- ScreenGui.Driver 
	local script = Instance.new('LocalScript', ScreenGui)

	-- Перехватываем вызовы WaitForChild чтобы "подменять" menu на другой объект
	
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local playerGui = player:WaitForChild("PlayerGui")
	
	-- Создаём реальный GUI с другим именем
	local realMenuName = "RealMenu_Secret" -- любое нестандартное имя
	local realMenu = Instance.new("Frame")
	realMenu.Name = realMenuName
	realMenu.Size = UDim2.new(1,0,1,0)
	realMenu.BackgroundTransparency = 1
	realMenu.Parent = playerGui
	
	-- Создаём "фейковый" menu, чтобы игра его "видела"
	local fakeMenu = Instance.new("Frame")
	fakeMenu.Name = "menu"
	fakeMenu.Size = UDim2.new(1,0,1,0)
	fakeMenu.BackgroundTransparency = 1
	fakeMenu.Parent = playerGui
	
	-- Патчим WaitForChild у playerGui
	local mt = getrawmetatable(playerGui)
	setreadonly(mt, false)
	
	local oldWaitForChild = mt.__index.WaitForChild or playerGui.WaitForChild
	
	mt.__index.WaitForChild = function(self, childName, ...)
		if childName == "menu" then
			-- Возвращаем fakeMenu вместо реального
			return fakeMenu
		end
		return oldWaitForChild(self, childName, ...)
	end
	
	setreadonly(mt, true)
	
	-- Теперь скрипты, делающие playerGui:WaitForChild("menu"), получат fakeMenu
	-- Но твой функциональный GUI - realMenu
	
	-- Дальше под realMenu пиши всю логику твоего интерфейса
	
end

local function AHGDXH_fake_script() -- ScreenGui.Tabs 
	local script = Instance.new('LocalScript', ScreenGui)

	local TweenService = game:GetService("TweenService")
	local UserInputService = game:GetService("UserInputService")
	local Lighting = game:GetService("Lighting")
	local Players = game:GetService("Players")
	
	local playerGui = Players.LocalPlayer:WaitForChild("PlayerGui")
	local screenGui = script.Parent
	
	local menu = screenGui:WaitForChild("menu")
	local tabsFrame = menu:WaitForChild("TabsFrame")
	local pagesFrame = menu:WaitForChild("PagesFrame")
	local logo = menu:FindFirstChild("logo")
	
	local blur = Instance.new("BlurEffect")
	blur.Size = 0
	blur.Parent = Lighting
	
	local backgroundDim = Instance.new("Frame")
	backgroundDim.Name = "BackgroundDim"
	backgroundDim.Size = UDim2.new(1, 0, 1, 0)
	backgroundDim.Position = UDim2.new(0, 0, 0, 0)
	backgroundDim.BackgroundColor3 = Color3.new(0, 0, 0)
	backgroundDim.BackgroundTransparency = 1
	backgroundDim.ZIndex = 5
	backgroundDim.BorderSizePixel = 0
	backgroundDim.Visible = false
	backgroundDim.Parent = playerGui
	
	local tweenInfoOpen = TweenInfo.new(0.35, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
	
	local originalMenuPosition = menu.Position
	local hiddenMenuPosition = originalMenuPosition + UDim2.new(0, 0, 0.05, 0)
	
	menu.Position = hiddenMenuPosition
	menu.BackgroundTransparency = 1
	menu.Visible = false
	pagesFrame.Visible = false
	pagesFrame.BackgroundTransparency = 1
	
	local pages = {}
	for _, child in ipairs(pagesFrame:GetChildren()) do
		if child:IsA("Frame") then
			pages[child.Name] = child
			child.Visible = false
		end
	end
	
	local buttonToPageMap = {
		Tab1Button = "Tab1Page",
		Tab2Button = "Tab2Page",
		Tab3Button = "Tab3Page",
		Tab4Button = "Tab4Page",
		Tab5Button = "Tab5Page",
		Tab6Button = "Tab6Page",
		Tab7Button = "Tab7Page",
		Tab8Button = "Tab8Page",
		Tab9Button = "Tab9Page",
		Tab10Button = "Tab10Page",
	}
	
	local currentPage = nil
	local currentButton = nil
	local isAnimating = false
	
	local function tweenButtonTransparency(button, bgTransparency, imgTransparency, duration)
		TweenService:Create(button, TweenInfo.new(duration), {BackgroundTransparency = bgTransparency}):Play()
		for _, child in ipairs(button:GetChildren()) do
			if child:IsA("ImageLabel") or child:IsA("ImageButton") then
				TweenService:Create(child, TweenInfo.new(duration), {ImageTransparency = imgTransparency}):Play()
			end
		end
	end
	
	local function highlightButton(buttonToHighlight)
		for _, button in ipairs(tabsFrame:GetChildren()) do
			if button:IsA("ImageButton") then
				if button == buttonToHighlight then
					tweenButtonTransparency(button, 0, 0, tweenInfo.Time)
				else
					tweenButtonTransparency(button, 1, 1, tweenInfo.Time)
				end
			end
		end
	end
	
	local function tweenTabsFrameTransparency(targetBgTransparency, targetImgTransparency, duration)
		for _, button in ipairs(tabsFrame:GetChildren()) do
			if button:IsA("ImageButton") then
				tweenButtonTransparency(button, targetBgTransparency, targetImgTransparency, duration)
			end
		end
	end
	
	local function tweenMenuContentTransparency(targetTransparency, duration)
		TweenService:Create(menu, TweenInfo.new(duration), {BackgroundTransparency = targetTransparency}):Play()
		tweenTabsFrameTransparency(targetTransparency, targetTransparency, duration)
	
		if currentPage then
			for _, desc in ipairs(currentPage:GetDescendants()) do
				if desc:IsA("TextButton") or desc:IsA("TextLabel") then
					TweenService:Create(desc, TweenInfo.new(duration), {TextTransparency = targetTransparency}):Play()
				elseif desc:IsA("ImageLabel") or desc:IsA("ImageButton") then
					TweenService:Create(desc, TweenInfo.new(duration), {ImageTransparency = targetTransparency}):Play()
				end
				if desc:IsA("GuiObject") then
					TweenService:Create(desc, TweenInfo.new(duration), {BackgroundTransparency = targetTransparency}):Play()
				end
			end
		end
	
		if logo and logo:IsA("ImageLabel") then
			TweenService:Create(logo, TweenInfo.new(duration), {ImageTransparency = targetTransparency}):Play()
		end
	end
	
	local function tweenDescendantsTransparencyAndPosition(frame, transparencyTarget, positionOffset, duration)
		for _, desc in ipairs(frame:GetDescendants()) do
			local tweenProps = {}
	
			if desc:IsA("TextLabel") or desc:IsA("TextButton") then
				tweenProps.TextTransparency = transparencyTarget
				tweenProps.BackgroundTransparency = transparencyTarget
			elseif desc:IsA("ImageLabel") or desc:IsA("ImageButton") then
				tweenProps.ImageTransparency = transparencyTarget
				tweenProps.BackgroundTransparency = transparencyTarget
			end
	
			if positionOffset and desc.Parent == frame then
				if desc:IsA("GuiObject") then
					local newPos = desc.Position + positionOffset
					TweenService:Create(desc, TweenInfo.new(duration), {Position = newPos}):Play()
				end
			end
	
			if next(tweenProps) then
				TweenService:Create(desc, TweenInfo.new(duration), tweenProps):Play()
			end
		end
	end
	
	local function showPage(pageName, button)
		if isAnimating then return end
		local newPage = pages[pageName]
		if not newPage then return end
		if currentPage == newPage then return end
	
		isAnimating = true
	
		if currentPage then
			tweenDescendantsTransparencyAndPosition(currentPage, 1, UDim2.new(0,0,0.05,0), tweenInfo.Time)
			wait(tweenInfo.Time)
			currentPage.Visible = false
			for _, desc in ipairs(currentPage:GetChildren()) do
				if desc:IsA("GuiObject") then
					desc.Position = desc.Position - UDim2.new(0,0,0.05,0)
				end
			end
		end
	
		highlightButton(button)
	
		newPage.Visible = true
		for _, desc in ipairs(newPage:GetChildren()) do
			if desc:IsA("GuiObject") then
				desc.Position = desc.Position - UDim2.new(0, 0, 0.05, 0)
			end
		end
		tweenDescendantsTransparencyAndPosition(newPage, 0, UDim2.new(0,0,0.05,0), tweenInfo.Time)
	
		currentPage = newPage
		currentButton = button
	
		wait(tweenInfo.Time)
		isAnimating = false
	end
	
	local function openMenu()
		if isAnimating then return end
		isAnimating = true
	
		backgroundDim.Visible = true
		TweenService:Create(backgroundDim, tweenInfoOpen, {BackgroundTransparency = 0.75}):Play()
		TweenService:Create(blur, tweenInfoOpen, {Size = 24}):Play()
	
		menu.Visible = true
		menu.Position = originalMenuPosition
		menu.BackgroundTransparency = 0
	
		pagesFrame.Visible = true
		pagesFrame.BackgroundTransparency = 0
	
		if not currentButton then
			currentButton = tabsFrame:FindFirstChild("Tab1Button")
		end
	
		tweenMenuContentTransparency(0, tweenInfoOpen.Time)
		showPage("Tab1Page", currentButton)
	
		wait(tweenInfoOpen.Time)
		isAnimating = false
	end
	
	local function closeMenu()
		if isAnimating then return end
		isAnimating = true
	
		tweenMenuContentTransparency(1, tweenInfo.Time)
		TweenService:Create(pagesFrame, tweenInfo, {BackgroundTransparency = 1}):Play()
		TweenService:Create(backgroundDim, tweenInfo, {BackgroundTransparency = 1}):Play()
		TweenService:Create(blur, tweenInfo, {Size = 0}):Play()
	
		TweenService:Create(menu, tweenInfo, {BackgroundTransparency = 1}):Play()
	
		task.delay(tweenInfo.Time, function()
			pagesFrame.Visible = false
			menu.Visible = false
			backgroundDim.Visible = false
			isAnimating = false
		end)
	end
	
	for _, button in ipairs(tabsFrame:GetChildren()) do
		if button:IsA("ImageButton") then
			local targetPage = buttonToPageMap[button.Name]
			if targetPage then
				if button.Name == "Tab1Button" then
					button.BackgroundTransparency = 0
					for _, child in ipairs(button:GetChildren()) do
						if child:IsA("ImageLabel") or child:IsA("ImageButton") then
							child.ImageTransparency = 0
						end
					end
					currentButton = button
				else
					button.BackgroundTransparency = 1
					for _, child in ipairs(button:GetChildren()) do
						if child:IsA("ImageLabel") or child:IsA("ImageButton") then
							child.ImageTransparency = 1
						end
					end
				end
				button.MouseButton1Click:Connect(function()
					showPage(targetPage, button)
				end)
			end
		end
	end
	
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.KeyCode == Enum.KeyCode.P then
			if menu.Visible then
				closeMenu()
			else
				openMenu()
			end
		end
	end)
	
	showPage("Tab1Page", currentButton)
	
end
coroutine.wrap(AHGDXH_fake_script)()
local function HAMT_fake_script() -- AdminESPButton.LocalScript 
	local script = Instance.new('LocalScript', AdminESPButton)

	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local Camera = workspace.CurrentCamera
	
	local LocalPlayer = Players.LocalPlayer
	local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
	
	-- Кнопка для включения
	local button = script.Parent
	button.Text = "ESP OFF"
	
	-- Целевые имена
	local targetNames = {
		["321lozan321"] = true,
		["acuncad4444"] = true,
		["ali911658"] = true
	}
	
	-- Переменные
	local espEnabled = false
	local dragging = false
	local dragStart, startPos
	local label
	local drawings = {}
	
	-- === Создание TextLabel ===
	local function createLabel()
		if label then return end
	
		label = Instance.new("TextLabel")
		label.Name = "ESPInfoLabel"
		label.Size = UDim2.new(0, 200, 0, 40)
		label.Position = UDim2.new(0, 100, 0, 100)
		label.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		label.TextColor3 = Color3.new(1, 1, 1)
		label.TextScaled = true
		label.Font = Enum.Font.SourceSans
		label.BackgroundTransparency = 0.3
		label.Text = "Players around you: 0"
		label.Parent = PlayerGui:FindFirstChildOfClass("ScreenGui") or PlayerGui:WaitForChild("ScreenGui")
	
		-- Перетаскивание
		label.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				dragging = true
				dragStart = input.Position
				startPos = label.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)
	
		UserInputService.InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				local delta = input.Position - dragStart
				label.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
			end
		end)
	end
	
	-- === Очистка ESP для игрока ===
	local function clearPlayerESP(player)
		if drawings[player] then
			for _, v in pairs(drawings[player]) do
				if typeof(v) == "Instance" then
					v:Destroy()
				elseif typeof(v) == "table" and v.Remove then
					v:Remove()
				end
			end
			drawings[player] = nil
		end
	end
	
	-- === Очистка всех ESP ===
	local function clearESP()
		for player in pairs(drawings) do
			clearPlayerESP(player)
		end
	end
	
	-- === Обновление ESP ===
	RunService.RenderStepped:Connect(function()
		if not espEnabled then
			clearESP()
			if label then label.Visible = false end
			return
		end
	
		if label then
			label.Visible = true
		end
	
		local count = 0
	
		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and targetNames[player.Name] and player.Character then
				local char = player.Character
				local hrp = char:FindFirstChild("HumanoidRootPart")
				local head = char:FindFirstChild("Head")
	
				if hrp and head then
					clearPlayerESP(player)
					local headPos, headVisible = Camera:WorldToViewportPoint(head.Position + Vector3.new(0, 0.3, 0))
					local feetPos, feetVisible = Camera:WorldToViewportPoint(hrp.Position - Vector3.new(0, 2.5, 0))
					local hrpScreen = Camera:WorldToViewportPoint(hrp.Position)
	
					count += 1
					drawings[player] = {}
	
					-- Box
					if headVisible and feetVisible then
						local box = Drawing.new("Square")
						box.Visible = true
						box.Filled = false
						box.Color = Color3.fromRGB(255, 0, 0)
						box.Thickness = 2
	
						local height = math.abs(headPos.Y - feetPos.Y)
						local width = height / 2
						local centerX = headPos.X
						local topY = math.min(headPos.Y, feetPos.Y)
	
						box.Size = Vector2.new(width, height)
						box.Position = Vector2.new(centerX - width / 2, topY)
	
						table.insert(drawings[player], box)
					end
	
					-- Tracer (всегда)
					local line = Drawing.new("Line")
					line.Color = Color3.fromRGB(255, 0, 0)
					line.Thickness = 1
					line.Transparency = 1
					line.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
					line.To = Vector2.new(hrpScreen.X, hrpScreen.Y)
					line.Visible = true
	
					table.insert(drawings[player], line)
	
					-- Надпись ADMIN
					local billboard = Instance.new("BillboardGui")
					billboard.Name = "ESP_AdminTag"
					billboard.Size = UDim2.new(0, 100, 0, 30)
					billboard.StudsOffset = Vector3.new(0, 2.5, 0)
					billboard.AlwaysOnTop = true
					billboard.Adornee = head
					billboard.Parent = PlayerGui
	
					local tag = Instance.new("TextLabel")
					tag.BackgroundTransparency = 1
					tag.Size = UDim2.new(1, 0, 1, 0)
					tag.TextColor3 = Color3.new(1, 0, 0)
					tag.TextScaled = true
					tag.Font = Enum.Font.GothamBold
					tag.Text = "ADMIN"
					tag.Parent = billboard
	
					table.insert(drawings[player], billboard)
				end
			else
				clearPlayerESP(player)
			end
		end
	
		if label then
			label.Text = "Players around you: " .. tostring(count)
		end
	end)
	
	-- === Кнопка переключения ===
	button.MouseButton1Click:Connect(function()
		espEnabled = not espEnabled
		button.Text = espEnabled and "ESP ON" or "ESP OFF"
	
		if espEnabled then
			createLabel()
			label.Visible = true
		else
			clearESP()
			if label then label.Visible = false end
		end
	end)
	
	-- Очистка при выходе игрока
	Players.PlayerRemoving:Connect(function(player)
		clearPlayerESP(player)
	end)
	
end
coroutine.wrap(HAMT_fake_script)()
local function BQURS_fake_script() -- Switcher.2DBox 
	local script = Instance.new('LocalScript', Switcher)

	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local LocalPlayer = Players.LocalPlayer
	local Camera = workspace.CurrentCamera
	
	local switcher = script.Parent
	local switch = switcher:WaitForChild("Switch")
	local label = switcher.Parent
	local frame = label:WaitForChild("Frame")
	local outlineButton = frame:WaitForChild("OutlineButton")
	local rainbowButton = frame:WaitForChild("RainbowButton")
	
	-- ESP переменные
	local espEnabled = false
	local espBoxes = {}
	local renderConn
	local rainbowConn
	
	-- Цвета и позиции
	local ON_COLOR = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR = Color3.fromRGB(12, 12, 12)
	local BUTTON_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local BUTTON_OFF_COLOR = Color3.fromRGB(57, 57, 57)
	
	local ON_POS = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	local outlineEnabled = false
	local rainbowEnabled = false
	
	-- Tween helper
	local function tween(obj, props, time)
		local info = TweenInfo.new(time or 0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tw = TweenService:Create(obj, info, props)
		tw:Play()
	end
	
	-- Цвет радуги
	local function getRainbowColor()
		local t = tick() * 2
		return Color3.fromHSV((t % 5) / 5, 1, 1)
	end
	
	-- Создание чёрного бордера из линий толщиной 1
	local function createBorder()
		local function newLine()
			local l = Drawing.new("Line")
			l.Thickness = 1 -- тонкая линия для бордера
			l.Color = Color3.new(0, 0, 0)
			l.Transparency = 1
			l.Visible = true
			return l
		end
	
		return {
			Top = newLine(),
			Bottom = newLine(),
			Left = newLine(),
			Right = newLine()
		}
	end
	
	-- Обновление позиции бордера с учётом смещения 0.5 пикселя
	local function updateBorder(border, x, y, width, height)
		-- Округляем до целых и добавляем 0.5 для ровных линий на пиксельной сетке
		x = math.floor(x) + 0.5
		y = math.floor(y) + 0.5
		width = math.floor(width)
		height = math.floor(height)
	
		border.Top.From = Vector2.new(x - 0.5, y - 0.5)
		border.Top.To = Vector2.new(x + width + 0.5, y - 0.5)
	
		border.Bottom.From = Vector2.new(x - 0.5, y + height + 0.5)
		border.Bottom.To = Vector2.new(x + width + 0.5, y + height + 0.5)
	
		border.Left.From = Vector2.new(x - 0.5, y - 0.5)
		border.Left.To = Vector2.new(x - 0.5, y + height + 0.5)
	
		border.Right.From = Vector2.new(x + width + 0.5, y - 0.5)
		border.Right.To = Vector2.new(x + width + 0.5, y + height + 0.5)
	end
	
	-- Удаление бордера
	local function removeBorder(border)
		if border then
			for _, line in pairs(border) do
				line:Remove()
			end
		end
	end
	
	-- Создание ESP-бокса
	local function createBox(player)
		if espBoxes[player] then return end
	
		local box = Drawing.new("Square")
		box.Visible = true
		box.Filled = false -- заполнение отключено, чтобы не было заливки!
		box.Transparency = 1
		box.Thickness = 2
		box.Color = Color3.fromRGB(255, 255, 255)
	
		local border = outlineEnabled and createBorder() or nil
	
		espBoxes[player] = {
			Box = box,
			Border = border
		}
	end
	
	-- Удаление бокса
	local function removeBox(player)
		local data = espBoxes[player]
		if data then
			if data.Box then data.Box:Remove() end
			if data.Border then removeBorder(data.Border) end
		end
		espBoxes[player] = nil
	end
	
	-- Очистка всех боксов
	local function clearAllBoxes()
		for _, data in pairs(espBoxes) do
			if data.Box then data.Box:Remove() end
			if data.Border then removeBorder(data.Border) end
		end
		espBoxes = {}
	end
	
	-- Обновление визуала
	local function updateBoxVisual(data)
		if rainbowEnabled then
			data.Box.Color = getRainbowColor()
		else
			data.Box.Color = Color3.fromRGB(255, 255, 255)
		end
	
		if outlineEnabled then
			if not data.Border then
				data.Border = createBorder()
			end
		else
			if data.Border then
				removeBorder(data.Border)
				data.Border = nil
			end
		end
	end
	
	-- Отрисовка ESP
	local function renderESP()
		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local hrp = player.Character.HumanoidRootPart
				local head = player.Character:FindFirstChild("Head")
	
				if head then
					local topPos, onScreen1 = Camera:WorldToViewportPoint(head.Position + Vector3.new(0, 0.3, 0))
					local bottomPos, onScreen2 = Camera:WorldToViewportPoint(hrp.Position - Vector3.new(0, 2.5, 0))
	
					if onScreen1 and onScreen2 and topPos.Z > 0 and bottomPos.Z > 0 then
						createBox(player)
	
						local data = espBoxes[player]
						local box = data.Box
	
						local height = math.abs(topPos.Y - bottomPos.Y)
						local width = height / 2
						local x = topPos.X - width / 2
						local y = topPos.Y
	
						-- Округляем позицию и размер для стабильности
						x = math.floor(x)
						y = math.floor(y)
						width = math.floor(width)
						height = math.floor(height)
	
						box.Size = Vector2.new(width, height)
						box.Position = Vector2.new(x, y)
						box.Visible = true
	
						updateBoxVisual(data)
	
						if data.Border then
							updateBorder(data.Border, x, y, width, height)
						end
					else
						removeBox(player)
					end
				else
					removeBox(player)
				end
			else
				removeBox(player)
			end
		end
	end
	
	-- Переключатель ESP
	switcher.MouseButton1Click:Connect(function()
		espEnabled = not espEnabled
	
		if espEnabled then
			tween(switcher, {BackgroundColor3 = ON_COLOR}, 0.3)
			tween(switch, {Position = ON_POS, BackgroundColor3 = SWITCH_ON_COLOR}, 0.3)
			tween(label, {BackgroundColor3 = LABEL_ON_COLOR}, 0.3)
	
			renderConn = RunService.RenderStepped:Connect(renderESP)
	
			if rainbowEnabled and not rainbowConn then
				rainbowConn = RunService.RenderStepped:Connect(function()
					for _, data in pairs(espBoxes) do
						if data.Box then
							data.Box.Color = getRainbowColor()
						end
					end
				end)
			end
		else
			tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0.3)
			tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0.3)
			tween(label, {BackgroundColor3 = LABEL_OFF_COLOR}, 0.3)
	
			if renderConn then renderConn:Disconnect() end
			if rainbowConn then rainbowConn:Disconnect() end
			clearAllBoxes()
		end
	end)
	
	-- Кнопка Outline с плавным фоном
	outlineButton.MouseButton1Click:Connect(function()
		outlineEnabled = not outlineEnabled
		tween(outlineButton, {
			BackgroundColor3 = outlineEnabled and BUTTON_ON_COLOR or BUTTON_OFF_COLOR
		}, 0.25)
	end)
	
	-- Кнопка Rainbow с плавным фоном
	rainbowButton.MouseButton1Click:Connect(function()
		rainbowEnabled = not rainbowEnabled
		tween(rainbowButton, {
			BackgroundColor3 = rainbowEnabled and BUTTON_ON_COLOR or BUTTON_OFF_COLOR
		}, 0.25)
	
		if rainbowEnabled and espEnabled and not rainbowConn then
			rainbowConn = RunService.RenderStepped:Connect(function()
				for _, data in pairs(espBoxes) do
					if data.Box then
						data.Box.Color = getRainbowColor()
					end
				end
			end)
		elseif not rainbowEnabled and rainbowConn then
			rainbowConn:Disconnect()
			rainbowConn = nil
			for _, data in pairs(espBoxes) do
				if data.Box then
					data.Box.Color = Color3.fromRGB(255, 255, 255)
				end
			end
		end
	end)
	
	Players.PlayerRemoving:Connect(removeBox)
	
end
coroutine.wrap(BQURS_fake_script)()
local function PYGHD_fake_script() -- Switcher_2.Glow 
	local script = Instance.new('LocalScript', Switcher_2)

	local Players = game:GetService("Players")
	local TweenService = game:GetService("TweenService")
	local RunService = game:GetService("RunService")
	
	local LocalPlayer = Players.LocalPlayer
	
	local button = script.Parent                         -- HighlightButton (TextButton)
	local switch = button:WaitForChild("Switch")         -- Switch (Frame)
	local label = button.Parent                          -- Label (TextLabel)
	
	-- Кнопки лежат в том же label, добавим их
	local frame = label:WaitForChild("Frame") -- Frame с кнопками
	
	local visibleOnlyButton = frame:WaitForChild("VisibleOnlyButton")
	local rainbowGlowButton = frame:WaitForChild("RainbowGlowButton")
	local selfGlowButton = frame:WaitForChild("SelfGlowButton")
	local showDeadOnlyButton = frame:WaitForChild("ShowDeadOnlyButton")
	local showAliveOnlyButton = frame:WaitForChild("ShowAliveOnlyButton")
	local showTargetOnlyButton = frame:WaitForChild("ShowTargetOnlyButton")
	local fillGlowButton = frame:WaitForChild("FillGlowButton") -- Новая кнопка Fill Glow
	
	-- Цвета и позиции
	local ON_COLOR = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR = Color3.fromRGB(12, 12, 12)
	local BUTTON_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local BUTTON_OFF_COLOR = Color3.fromRGB(57, 57, 57)
	
	local ON_POS = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	-- Цвета для frame и TextLabel внутри ImageButton по switch
	local FRAME_ON_BG = Color3.fromRGB(0, 6, 13)
	local FRAME_OFF_BG = Color3.fromRGB(9, 9, 9)
	
	local TEXTLABEL_ON_BG = Color3.fromRGB(0, 6, 13)
	local TEXTLABEL_OFF_BG = Color3.fromRGB(9, 9, 9)
	
	-- Tween helper
	local function tween(obj, props, time)
		local info = TweenInfo.new(time or 0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local t = TweenService:Create(obj, info, props)
		t:Play()
	end
	
	-- Состояния
	local isOn = false
	local highlights = {} -- [player.Character] = Highlight instance
	local connections = {}
	
	-- Настройки кнопок
	local settings = {
		VisibleOnly = false,
		RainbowGlow = false,
		SelfGlow = false,
		ShowDeadOnly = false,
		ShowAliveOnly = false,
		ShowTargetOnly = false,
		FillGlow = false, -- Добавлена новая настройка
	}
	
	local targetPlayer = nil
	local targetGlowTimeout = 10
	local targetGlowTimers = {}
	
	-- Функция для обновления цвета радуги
	local function getRainbowColor()
		local t = tick() * 2
		return Color3.fromHSV((t % 5) / 5, 1, 1)
	end
	
	-- Создание Highlight
	local function createHighlight(character)
		if not character or highlights[character] then return end
	
		local highlight = Instance.new("Highlight")
		highlight.Name = "PlayerHighlight"
		highlight.FillColor = Color3.new(1, 1, 1)
		highlight.OutlineColor = Color3.new(1, 1, 1)
		highlight.FillTransparency = 0.7
		highlight.OutlineTransparency = 0
		highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
		highlight.Parent = character
	
		highlights[character] = highlight
	end
	
	-- Удаление Highlight
	local function removeHighlight(character)
		if highlights[character] then
			highlights[character]:Destroy()
			highlights[character] = nil
		end
	end
	
	local function clearAllHighlights()
		for char, h in pairs(highlights) do
			if h then h:Destroy() end
		end
		highlights = {}
	end
	
	-- Проверка, жив ли игрок
	local function isAlive(player)
		local char = player.Character
		if not char then return false end
		local humanoid = char:FindFirstChildOfClass("Humanoid")
		if not humanoid then return false end
		return humanoid.Health > 0
	end
	
	-- Проверка видимости игрока (Raycast)
	local function isVisible(player)
		local char = player.Character
		if not char then return false end
		local hrp = char:FindFirstChild("HumanoidRootPart")
		if not hrp then return false end
	
		local camera = workspace.CurrentCamera
		local origin = camera.CFrame.Position
		local direction = (hrp.Position - origin)
	
		local raycastParams = RaycastParams.new()
		raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
		raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
	
		local result = workspace:Raycast(origin, direction, raycastParams)
		if not result then return true end
		if result.Instance:IsDescendantOf(char) then return true end
		return false
	end
	
	-- Обновление подсветки (Glow) для всех игроков по настройкам
	local function updateAllHighlights()
		for _, player in pairs(Players:GetPlayers()) do
			local char = player.Character
			if not char then
				removeHighlight(char)
				continue
			end
	
			-- Self Glow
			if player == LocalPlayer and not settings.SelfGlow then
				removeHighlight(char)
				continue
			end
	
			-- Alive / Dead фильтры
			local alive = isAlive(player)
			if settings.ShowAliveOnly and not alive then
				removeHighlight(char)
				continue
			end
			if settings.ShowDeadOnly and alive then
				removeHighlight(char)
				continue
			end
	
			-- Видимость
			if settings.VisibleOnly and not isVisible(player) then
				removeHighlight(char)
				continue
			end
	
			-- Show Target Only
			if settings.ShowTargetOnly then
				if player ~= targetPlayer then
					removeHighlight(char)
					continue
				end
			end
	
			-- Создаём или обновляем Highlight
			if not highlights[char] then
				createHighlight(char)
			end
			local highlight = highlights[char]
	
			if settings.RainbowGlow then
				highlight.FillColor = getRainbowColor()
				highlight.OutlineColor = getRainbowColor()
			else
				highlight.FillColor = Color3.fromRGB(255, 255, 255)
				highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
			end
	
			-- Управление Fill Transparency по FillGlow
			if settings.FillGlow then
				highlight.FillTransparency = 0
			else
				highlight.FillTransparency = 0.7
			end
		end
	end
	
	-- Обновление таймеров подсветки цели
	local function updateTargetGlow(dt)
		if not settings.ShowTargetOnly or not targetPlayer then return end
	
		targetGlowTimers[targetPlayer] = (targetGlowTimers[targetPlayer] or targetGlowTimeout) - dt
		if targetGlowTimers[targetPlayer] <= 0 then
			targetPlayer = nil
			updateAllHighlights()
		end
	end
	
	-- Функция для установки цели для подсветки (вызывай при попадании/стрельбе)
	local function setTarget(player)
		if not player or not player.Character then return end
		targetPlayer = player
		targetGlowTimers[player] = targetGlowTimeout
		updateAllHighlights()
	end
	
	-- Обновление цвета радуги постоянно
	local rainbowUpdateConn
	
	-- Главный RenderStepped для обновлений
	local renderConn
	
	-- Включение подсветки
	local function enableGlow()
		renderConn = RunService.RenderStepped:Connect(function(dt)
			updateAllHighlights()
			updateTargetGlow(dt)
		end)
	
		if settings.RainbowGlow then
			if not rainbowUpdateConn then
				rainbowUpdateConn = RunService.RenderStepped:Connect(function()
					for _, h in pairs(highlights) do
						if h and settings.RainbowGlow then
							h.FillColor = getRainbowColor()
							h.OutlineColor = getRainbowColor()
						end
					end
				end)
			end
		end
	end
	
	-- Выключение подсветки
	local function disableGlow()
		if renderConn then
			renderConn:Disconnect()
			renderConn = nil
		end
		if rainbowUpdateConn then
			rainbowUpdateConn:Disconnect()
			rainbowUpdateConn = nil
		end
		clearAllHighlights()
		targetPlayer = nil
		targetGlowTimers = {}
	end
	
	-- Функция для плавного изменения цвета фона всех TextLabel внутри ImageButton в frame
	local function updateTextLabelsBg(color)
		for _, descendant in ipairs(frame:GetDescendants()) do
			if descendant:IsA("ImageButton") then
				for _, child in ipairs(descendant:GetChildren()) do
					if child:IsA("TextLabel") then
						tween(child, {BackgroundColor3 = color}, 0.3)
					end
				end
			end
		end
	end
	
	-- Функция для обновления цвета фона frame и TextLabel по состоянию switch
	local function updateFrameAndTextLabelsColors(isOn)
		if isOn then
			tween(frame, {BackgroundColor3 = FRAME_ON_BG}, 0.3)
			updateTextLabelsBg(TEXTLABEL_ON_BG)
		else
			tween(frame, {BackgroundColor3 = FRAME_OFF_BG}, 0.3)
			updateTextLabelsBg(TEXTLABEL_OFF_BG)
		end
	end
	
	-- Обработка кнопки включения подсветки
	button.MouseButton1Click:Connect(function()
		isOn = not isOn
	
		-- Обычные твины кнопки, свича и лейбла
		tween(button, {BackgroundColor3 = isOn and ON_COLOR or OFF_COLOR}, 0.3)
		tween(switch, {Position = isOn and ON_POS or OFF_POS, BackgroundColor3 = isOn and SWITCH_ON_COLOR or SWITCH_OFF_COLOR}, 0.3)
		tween(label, {BackgroundColor3 = isOn and LABEL_ON_COLOR or LABEL_OFF_COLOR}, 0.3)
	
		-- Обновляем фон frame и текстов
		updateFrameAndTextLabelsColors(isOn)
	
		if isOn then
			enableGlow()
		else
			disableGlow()
		end
	end)
	
	-- Функция для переключения кнопок с плавным цветом
	local function setupToggleButton(btn, settingName)
		btn.BackgroundColor3 = BUTTON_OFF_COLOR
		btn.MouseButton1Click:Connect(function()
			settings[settingName] = not settings[settingName]
			tween(btn, {BackgroundColor3 = settings[settingName] and BUTTON_ON_COLOR or BUTTON_OFF_COLOR}, 0.25)
	
			updateAllHighlights()
	
			-- При отключении ShowTargetOnly — сбросить цель
			if settingName == "ShowTargetOnly" and not settings.ShowTargetOnly then
				targetPlayer = nil
				targetGlowTimers = {}
			end
		end)
	end
	
	-- Настраиваем кнопки
	setupToggleButton(visibleOnlyButton, "VisibleOnly")
	setupToggleButton(rainbowGlowButton, "RainbowGlow")
	setupToggleButton(selfGlowButton, "SelfGlow")
	setupToggleButton(showDeadOnlyButton, "ShowDeadOnly")
	setupToggleButton(showAliveOnlyButton, "ShowAliveOnly")
	setupToggleButton(showTargetOnlyButton, "ShowTargetOnly")
	setupToggleButton(fillGlowButton, "FillGlow") -- Подключаем новую кнопку
	
	-- Очищаем подсветки при выходе игрока
	Players.PlayerRemoving:Connect(function(player)
		if player.Character then
			removeHighlight(player.Character)
		end
		if player == targetPlayer then
			targetPlayer = nil
			targetGlowTimers = {}
		end
	end)
	
end
coroutine.wrap(PYGHD_fake_script)()
local function HYMKGZI_fake_script() -- Glow.LocalScript 
	local script = Instance.new('LocalScript', Glow)

	local label = script.Parent -- или путь к твоему TextLabel
	label.Font = Enum.Font.SourceSans
	
	
end
coroutine.wrap(HYMKGZI_fake_script)()
local function ITOUIJX_fake_script() -- Switcher_3.Names 
	local script = Instance.new('LocalScript', Switcher_3)

	local Players = game:GetService("Players")
	local TweenService = game:GetService("TweenService")
	
	local LocalPlayer = Players.LocalPlayer
	
	local button = script.Parent                                -- NameESPButton (TextButton)
	local switch = button:WaitForChild("Switch")                -- Switch (Frame)
	local label = button.Parent                                 -- NameLabel (TextLabel)
	
	local frame = label:WaitForChild("Frame")                   -- Frame с кнопками NickName, UserName, Position
	local nickNameButton = frame:WaitForChild("NickNameButton")
	local userNameButton = frame:WaitForChild("UserNameButton")
	local positionButton = frame:WaitForChild("PositionButton")
	
	local pickPos = label:WaitForChild("PickPos")               -- Frame с выбором позиции ника
	local bottomButton = pickPos:WaitForChild("Bottom")
	local topButton = pickPos:WaitForChild("Top")
	
	-- Цвета и позиции
	local ON_COLOR = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR = Color3.fromRGB(12, 12, 12)
	local BUTTON_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local BUTTON_OFF_COLOR = Color3.fromRGB(57, 57, 57)
	local BUTTON_OFF_COLOR2 = Color3.fromRGB(0, 0, 0)
	
	local ON_POS = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	-- Tween helper
	local function tween(obj, props, time)
		local info = TweenInfo.new(time or 0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local t = TweenService:Create(obj, info, props)
		t:Play()
	end
	
	local function updateTextLabelsBg(color)
		for _, descendant in ipairs(frame:GetDescendants()) do
			if descendant:IsA("ImageButton") or descendant:IsA("TextButton") then
				for _, child in ipairs(descendant:GetChildren()) do
					if child:IsA("TextLabel") then
						tween(child, {BackgroundColor3 = color}, 0.3)
						local innerFrame = child:FindFirstChildOfClass("Frame")
						if innerFrame then
							tween(innerFrame, {BackgroundColor3 = color}, 0.3)
						end
					end
				end
			end
		end
	end
	
	local function updateFrameBg(color)
		tween(frame, {BackgroundColor3 = color}, 0.3)
	end
	
	local isOn = false
	local nameTags = {}
	local connections = {}
	
	local showNickAsUsername = false
	local nickPosition = "Bottom"
	local pickPosVisible = false
	
	local pickPosStartPos = pickPos.Position
	local buttonStartPositions = {}
	for _, child in pairs(pickPos:GetChildren()) do
		if child:IsA("TextButton") then
			buttonStartPositions[child] = child.Position
		end
	end
	
	local function createNameTag(character, player)
		if not character or not character:FindFirstChild("Head") then return end
		if nameTags[character] then return end
	
		local billboard = Instance.new("BillboardGui")
		billboard.Name = "NameESP"
		billboard.Adornee = character.Head
		billboard.Size = UDim2.new(0, 80, 0, 16)
		billboard.AlwaysOnTop = true
	
		local textLabel = Instance.new("TextLabel")
		textLabel.BackgroundTransparency = 1
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
		textLabel.TextStrokeTransparency = 0.4
		textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
		textLabel.TextScaled = true
		textLabel.Font = Enum.Font.GothamMedium
		textLabel.Parent = billboard
	
		billboard.Parent = character.Head
		nameTags[character] = billboard
	
		local function update()
			if not character or not character.Parent then
				if nameTags[character] then
					nameTags[character]:Destroy()
					nameTags[character] = nil
				end
				return
			end
			textLabel.Text = showNickAsUsername and ("@" .. player.Name) or player.DisplayName
			if nickPosition == "Bottom" then
				-- Ниже ног: смещение по Y отрицательное
				billboard.StudsOffset = Vector3.new(0, -1.5, 0)
			else
				-- Выше головы
				billboard.StudsOffset = Vector3.new(0, 3.5, 0)
			end
		end
	
		update()
	
		if not connections[character] then connections[character] = {} end
		table.insert(connections[character], player:GetPropertyChangedSignal("DisplayName"):Connect(update))
		table.insert(connections[character], character.AncestryChanged:Connect(function()
			if not character:IsDescendantOf(game) then
				if nameTags[character] then
					nameTags[character]:Destroy()
					nameTags[character] = nil
				end
				if connections[character] then
					for _, c in pairs(connections[character]) do
						c:Disconnect()
					end
					connections[character] = nil
				end
			end
		end))
	end
	
	local function removeAllNameTags()
		for _, tag in pairs(nameTags) do
			tag:Destroy()
		end
		table.clear(nameTags)
	end
	
	local function disconnectAll()
		for _, list in pairs(connections) do
			for _, conn in ipairs(list) do
				conn:Disconnect()
			end
		end
		table.clear(connections)
	end
	
	local function updateAllNameTags()
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
				createNameTag(player.Character, player)
			end
		end
	end
	
	button.MouseButton1Click:Connect(function()
		isOn = not isOn
		tween(button, {BackgroundColor3 = isOn and ON_COLOR or OFF_COLOR}, 0.3)
		tween(switch, {Position = isOn and ON_POS or OFF_POS, BackgroundColor3 = isOn and SWITCH_ON_COLOR or SWITCH_OFF_COLOR}, 0.3)
		tween(label, {BackgroundColor3 = isOn and LABEL_ON_COLOR or LABEL_OFF_COLOR}, 0.3)
	
		updateTextLabelsBg(isOn and Color3.fromRGB(0, 6, 13) or Color3.fromRGB(9, 9, 9))
		updateFrameBg(isOn and Color3.fromRGB(0, 6, 13) or Color3.fromRGB(9, 9, 9))
	
		if isOn then
			updateAllNameTags()
			table.insert(connections, Players.PlayerAdded:Connect(function(player)
				table.insert(connections, player.CharacterAdded:Connect(function(character)
					task.wait(1)
					if isOn then createNameTag(character, player) end
				end))
			end))
			for _, player in pairs(Players:GetPlayers()) do
				if player ~= LocalPlayer then
					table.insert(connections, player.CharacterAdded:Connect(function(character)
						task.wait(1)
						if isOn then createNameTag(character, player) end
					end))
				end
			end
		else
			removeAllNameTags()
			disconnectAll()
		end
	end)
	
	local function updateNameButtons()
		nickNameButton.BackgroundColor3 = showNickAsUsername and BUTTON_OFF_COLOR or BUTTON_ON_COLOR
		userNameButton.BackgroundColor3 = showNickAsUsername and BUTTON_ON_COLOR or BUTTON_OFF_COLOR
	end
	
	nickNameButton.MouseButton1Click:Connect(function()
		showNickAsUsername = false
		updateNameButtons()
		for char, tag in pairs(nameTags) do
			if tag.Adornee and tag.Adornee.Parent then
				local player = Players:GetPlayerFromCharacter(tag.Adornee.Parent)
				if player then
					tag.TextLabel.Text = player.DisplayName
				end
			end
		end
	end)
	
	userNameButton.MouseButton1Click:Connect(function()
		showNickAsUsername = true
		updateNameButtons()
		for char, tag in pairs(nameTags) do
			if tag.Adornee and tag.Adornee.Parent then
				local player = Players:GetPlayerFromCharacter(tag.Adornee.Parent)
				if player then
					tag.TextLabel.Text = "@" .. player.Name
				end
			end
		end
	end)
	
	updateNameButtons()
	
	pickPos.Visible = false
	pickPos.BackgroundTransparency = 1
	for _, child in pairs(pickPos:GetChildren()) do
		if child:IsA("TextButton") then
			child.TextTransparency = 1
			child.BackgroundTransparency = 1
		end
	end
	
	positionButton.MouseButton1Click:Connect(function()
		pickPosVisible = not pickPosVisible
		if pickPosVisible then
			pickPos.Position = pickPosStartPos + UDim2.new(0, 0, 0.1, 0)
			pickPos.Visible = true
			tween(pickPos, {Position = pickPosStartPos, BackgroundTransparency = 0}, 0.25)
			for _, btn in pairs(pickPos:GetChildren()) do
				if btn:IsA("TextButton") then
					btn.Position = buttonStartPositions[btn] + UDim2.new(0, 0, 0.1, 0)
					tween(btn, {
						Position = buttonStartPositions[btn],
						TextTransparency = 0,
						BackgroundTransparency = 0
					}, 0.25)
				end
			end
		else
			tween(pickPos, {Position = pickPosStartPos + UDim2.new(0, 0, 0.1, 0), BackgroundTransparency = 1}, 0.25)
			for _, btn in pairs(pickPos:GetChildren()) do
				if btn:IsA("TextButton") then
					tween(btn, {
						Position = buttonStartPositions[btn] + UDim2.new(0, 0, 0.1, 0),
						TextTransparency = 1,
						BackgroundTransparency = 1
					}, 0.25)
				end
			end
			task.delay(0.26, function()
				if not pickPosVisible then
					pickPos.Visible = false
				end
			end)
		end
	end)
	
	bottomButton.MouseButton1Click:Connect(function()
		nickPosition = "Bottom"
		bottomButton.BackgroundColor3 = BUTTON_ON_COLOR
		topButton.BackgroundColor3 = BUTTON_OFF_COLOR2
		for _, tag in pairs(nameTags) do
			tag.StudsOffset = Vector3.new(0, -1.5, 0)  -- Ниже ног
		end
	end)
	
	topButton.MouseButton1Click:Connect(function()
		nickPosition = "Top"
		topButton.BackgroundColor3 = BUTTON_ON_COLOR
		bottomButton.BackgroundColor3 = BUTTON_OFF_COLOR2
		for _, tag in pairs(nameTags) do
			tag.StudsOffset = Vector3.new(0, 3.5, 0) -- Выше головы
		end
	end)
	
	bottomButton.BackgroundColor3 = BUTTON_ON_COLOR
	topButton.BackgroundColor3 = BUTTON_OFF_COLOR2
	
end
coroutine.wrap(ITOUIJX_fake_script)()
local function SQCJUCI_fake_script() -- PositionButton.LocalScript 
	local script = Instance.new('LocalScript', PositionButton)

	local button = script.Parent  -- твоя кнопка
	
	local state = false  -- начальное состояние
	
	button.MouseButton1Click:Connect(function()
		state = not state  -- переключаем состояние
		if state then
			button.Text = "↑ "
		else
			button.Text = "↓"
		end
	end)
	
end
coroutine.wrap(SQCJUCI_fake_script)()
local function QDVAQ_fake_script() -- AimbotButton.VectorAim 
	local script = Instance.new('LocalScript', AimbotButton)

	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	local TweenService = game:GetService("TweenService")
	
	local LocalPlayer = Players.LocalPlayer
	local gui = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local menu = gui:WaitForChild("menu")
	local pagesFrame = menu:WaitForChild("PagesFrame")
	local tab2Page = pagesFrame:WaitForChild("Tab2Page")
	local aimbotFrame = tab2Page:WaitForChild("AimbotFrame")
	
	local colorBox = aimbotFrame:WaitForChild("ColorBox")
	local applyColorButton = aimbotFrame:WaitForChild("ApplyColorButton")
	applyColorButton.MouseButton1Click:Connect(function()
		local text = colorBox.Text
		local r, g, b = text:match("(%d+)%s*,%s*(%d+)%s*,%s*(%d+)")
		if r and g and b then
			r = tonumber(r)
			g = tonumber(g)
			b = tonumber(b)
			if r and g and b and r >= 0 and r <= 255 and g >= 0 and g <= 255 and b >= 0 and b <= 255 then
				fovCircle.Color = Color3.fromRGB(r, g, b)
			else
				print("Incorrect Color")
			end
		end
	end)
	
	local aimbotButton = aimbotFrame:WaitForChild("AimbotButton")
	local showFovButton = aimbotFrame:WaitForChild("ShowFov")
	local lockOnLastButton = aimbotFrame:WaitForChild("LockOnLast")
	local wallCheckButton = aimbotFrame:WaitForChild("WallCheck")
	local smoothingBox = aimbotFrame:WaitForChild("SmoothingBox")
	local applySmoothingButton = aimbotFrame:WaitForChild("ApplySmoothingButton")
	local bindKeyButton = aimbotFrame:WaitForChild("BindKeyButton")
	local holdToggleButton = aimbotFrame:WaitForChild("HoldToggleButton")
	
	local Camera = workspace.CurrentCamera
	
	-- Настройки
	local AIM_KEY = Enum.KeyCode.T
	local FOV_RADIUS = 150
	local AIM_SENSITIVITY = 0.25
	local MAX_DISTANCE = 1000
	
	-- Состояния
	local aimbotEnabled = false
	local aiming = false
	local showFov = true
	local lockOnLastEnabled = false
	local lockedTarget = nil
	local wallCheckEnabled = false
	local aimMode = "Hold"
	local waitingForBind = false
	
	-- FOV круг
	local fovCircle = Drawing.new("Circle")
	fovCircle.Transparency = 0.6
	fovCircle.Thickness = 2
	fovCircle.NumSides = 100
	fovCircle.Filled = false
	fovCircle.Radius = FOV_RADIUS
	fovCircle.Color = Color3.fromRGB(0, 255, 255)
	fovCircle.Visible = false
	
	-- Wallcheck
	local function canSee(targetPos)
		local origin = Camera.CFrame.Position
		local direction = (targetPos - origin)
		local raycastParams = RaycastParams.new()
		raycastParams.FilterDescendantsInstances = {LocalPlayer.Character}
		raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
		local result = workspace:Raycast(origin, direction, raycastParams)
		if result then
			return result.Instance:IsDescendantOf(targetPos.Parent)
		else
			return true
		end
	end
	
	-- Поиск цели
	local function getClosestTarget()
		local closest = nil
		local shortestDist = math.huge
		local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
	
		for _, player in ipairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
				local head = player.Character.Head
				local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
				if humanoid and humanoid.Health > 0 then
					local pos, visible = Camera:WorldToViewportPoint(head.Position)
					if visible then
						local screenPos = Vector2.new(pos.X, pos.Y)
						local dist2D = (screenPos - screenCenter).Magnitude
						local dist3D = (Camera.CFrame.Position - head.Position).Magnitude
	
						if dist2D <= FOV_RADIUS and dist3D <= MAX_DISTANCE then
							if not wallCheckEnabled or canSee(head.Position) then
								if dist2D < shortestDist then
									shortestDist = dist2D
									closest = head
								end
							end
						end
					end
				end
			end
		end
	
		return closest
	end
	
	local function isTargetInFOV(targetHead)
		local screenCenter = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
		local pos, visible = Camera:WorldToViewportPoint(targetHead.Position)
		if visible then
			local screenPos = Vector2.new(pos.X, pos.Y)
			local dist2D = (screenPos - screenCenter).Magnitude
			return dist2D <= FOV_RADIUS
		end
		return false
	end
	
	local function getTarget()
		if lockOnLastEnabled then
			if lockedTarget and lockedTarget.Parent and lockedTarget.Parent:FindFirstChildOfClass("Humanoid") then
				local humanoid = lockedTarget.Parent:FindFirstChildOfClass("Humanoid")
				if humanoid and humanoid.Health > 0 and isTargetInFOV(lockedTarget) then
					return lockedTarget
				else
					-- Если lockedTarget умер или вне ФОВ — просто сбрасываем, но не ищем новую цель
					lockedTarget = nil
					return nil
				end
			else
				return nil
			end
		else
			-- Обычный автопоиск целей
			local target = getClosestTarget()
			if target then
				lockedTarget = target
			else
				lockedTarget = nil
			end
			return target
		end
	end
	
	local function aimAt(targetPos)
		local camPos = Camera.CFrame.Position
		local direction = (targetPos - camPos).Unit
		local targetCF = CFrame.new(camPos, camPos + direction)
		Camera.CFrame = Camera.CFrame:Lerp(targetCF, AIM_SENSITIVITY)
	end
	
	-- Target Info GUI
	local function createTargetInfo()
		local screenGui = Instance.new("ScreenGui")
		screenGui.Name = "TargetInfo"
		screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
	
		local frame = Instance.new("Frame")
		frame.Size = UDim2.new(0, 220, 0, 70)
		frame.Position = UDim2.new(0.5, -110, 1, -130)
		frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
		frame.BorderSizePixel = 0
		frame.BackgroundTransparency = 1
		frame.Name = "InfoFrame"
		frame.Parent = screenGui
	
		local rainbow = Instance.new("Frame")
		rainbow.Size = UDim2.new(1, 0, 0, 4)
		rainbow.Position = UDim2.new(0, 0, 0, 0)
		rainbow.BorderSizePixel = 0
		rainbow.Name = "RainbowBar"
		rainbow.Parent = frame
	
		local name = Instance.new("TextLabel")
		name.Size = UDim2.new(0.65, 0, 0.5, 0)
		name.Position = UDim2.new(0.25, 0, 0, 5)
		name.BackgroundTransparency = 1
		name.TextColor3 = Color3.fromRGB(255, 255, 255)
		name.TextScaled = true
		name.Text = "Target"
		name.Name = "TargetName"
		name.Font = Enum.Font.Gotham
		name.Parent = frame
	
		local hp = Instance.new("TextLabel")
		hp.Size = UDim2.new(0.65, 0, 0.4, 0)
		hp.Position = UDim2.new(0.25, 0, 0.55, 0)
		hp.BackgroundTransparency = 1
		hp.TextColor3 = Color3.fromRGB(200, 255, 200)
		hp.TextScaled = true
		hp.Text = "HP: 100"
		hp.Name = "TargetHP"
		hp.Font = Enum.Font.Gotham
		hp.Parent = frame
	
		local avatar = Instance.new("ImageLabel")
		avatar.Size = UDim2.new(0, 40, 0, 40)
		avatar.Position = UDim2.new(0, 5, 0.5, -20)
		avatar.BackgroundTransparency = 1
		avatar.Name = "Avatar"
		avatar.Image = ""
		avatar.Parent = frame
	
		local function animateRainbow()
			local hue = 0
			while true do
				hue = (hue + 0.01) % 1
				rainbow.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
				task.wait(0.05)
			end
		end
	
		task.spawn(animateRainbow)
		return frame
	end
	
	local infoFrame = createTargetInfo()
	infoFrame.Visible = false
	
	local function updateTargetInfo(player)
		if not player or not player:IsA("Player") then return end
		local frame = infoFrame
		local nameLabel = frame:FindFirstChild("TargetName")
		local hpLabel = frame:FindFirstChild("TargetHP")
		local avatarImage = frame:FindFirstChild("Avatar")
	
		if player.Character and player.Character:FindFirstChild("Humanoid") then
			hpLabel.Text = "HP: " .. math.floor(player.Character.Humanoid.Health)
		else
			hpLabel.Text = "HP: 0"
		end
	
		nameLabel.Text = player.Name
		avatarImage.Image = "https://www.roblox.com/headshot-thumbnail/image?userId="..player.UserId.."&width=420&height=420&format=png"
	
		if not frame.Visible then
			TweenService:Create(frame, TweenInfo.new(0.25), {BackgroundTransparency = 0}):Play()
			frame.Visible = true
		end
	end
	
	local function hideTargetInfo()
		if infoFrame.Visible then
			TweenService:Create(infoFrame, TweenInfo.new(0.25), {BackgroundTransparency = 1}):Play()
			task.delay(0.3, function()
				infoFrame.Visible = false
			end)
		end
	end
	
	-- Обработка
	bindKeyButton.MouseButton1Click:Connect(function()
		if waitingForBind then return end
		waitingForBind = true
		bindKeyButton.Text = "Press a key..."
	end)
	
	UserInputService.InputBegan:Connect(function(input, gpe)
		if gpe then return end
		if waitingForBind then
			if input.UserInputType == Enum.UserInputType.Keyboard then
				AIM_KEY = input.KeyCode
				waitingForBind = false
				bindKeyButton.Text = "Bind: " .. AIM_KEY.Name
			end
		end
	
		if input.KeyCode == AIM_KEY then
			if lockOnLastEnabled then
				if aiming then
					-- Выключаем аимбот и сбрасываем lockedTarget
					aiming = false
					lockedTarget = nil
				else
					-- Если lockedTarget валиден и в ФОВ — просто включаем aiming
					if lockedTarget and lockedTarget.Parent and lockedTarget.Parent:FindFirstChildOfClass("Humanoid") then
						local humanoid = lockedTarget.Parent:FindFirstChildOfClass("Humanoid")
						if humanoid and humanoid.Health > 0 and isTargetInFOV(lockedTarget) then
							aiming = true
							return
						end
					end
	
					-- Ищем новую цель и ставим lockedTarget, если нашли
					local target = getClosestTarget()
					if target then
						lockedTarget = target
						aiming = true
					else
						lockedTarget = nil
						aiming = false
					end
				end
			else
				-- Обычное поведение без lockOnLast
				if aimMode == "Hold" then
					aiming = true
				else
					aiming = not aiming
				end
			end
		end
	end)
	
	UserInputService.InputEnded:Connect(function(input)
		if aimMode == "Hold" and input.KeyCode == AIM_KEY then
			aiming = false
		end
	end)
	
	aimbotButton.MouseButton1Click:Connect(function()
		aimbotEnabled = not aimbotEnabled
		aimbotButton.Text = aimbotEnabled and "Aimbot ON" or "Aimbot OFF"
		fovCircle.Visible = aimbotEnabled and showFov
		if not aimbotEnabled then
			lockedTarget = nil
			hideTargetInfo()
			aiming = false
		end
	end)
	
	showFovButton.MouseButton1Click:Connect(function()
		showFov = not showFov
		fovCircle.Visible = aimbotEnabled and showFov
	end)
	
	lockOnLastButton.MouseButton1Click:Connect(function()
		lockOnLastEnabled = not lockOnLastEnabled
		lockOnLastButton.Text = lockOnLastEnabled and "Lock On Last ON" or "Lock On Last OFF"
		if not lockOnLastEnabled then lockedTarget = nil end
	end)
	
	wallCheckButton.MouseButton1Click:Connect(function()
		wallCheckEnabled = not wallCheckEnabled
		wallCheckButton.Text = wallCheckEnabled and "WallCheck ON" or "WallCheck OFF"
	end)
	
	applySmoothingButton.MouseButton1Click:Connect(function()
		local num = tonumber(smoothingBox.Text)
		if num and num >= 0 and num <= 1 then
			AIM_SENSITIVITY = num
		end
	end)
	
	holdToggleButton.MouseButton1Click:Connect(function()
		aimMode = (aimMode == "Hold") and "Toggle" or "Hold"
		holdToggleButton.Text = "Mode: " .. aimMode
	end)
	
	holdToggleButton.Text = "Mode: " .. aimMode
	smoothingBox.Text = tostring(AIM_SENSITIVITY)
	
	RunService.RenderStepped:Connect(function(dt)
		fovCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
	
		if aimbotEnabled and aiming then
			local targetHead = getTarget()
			if targetHead then
				aimAt(targetHead.Position)
				local player = Players:GetPlayerFromCharacter(targetHead.Parent)
				if player then
					updateTargetInfo(player)
				end
			else
				hideTargetInfo()
			end
		else
			hideTargetInfo()
		end
	end)
	
end
coroutine.wrap(QDVAQ_fake_script)()
local function OZWB_fake_script() -- FullbrightOFF.LocalScript 
	local script = Instance.new('LocalScript', FullbrightOFF)

	local button = script.Parent
	local Lighting = game:GetService("Lighting")
	local isOn = false
	
	-- Сохраняем оригинальные значения
	local original = {
		Brightness = Lighting.Brightness,
		ClockTime = Lighting.ClockTime,
		FogEnd = Lighting.FogEnd,
		GlobalShadows = Lighting.GlobalShadows,
		Ambient = Lighting.Ambient,
		OutdoorAmbient = Lighting.OutdoorAmbient
	}
	
	-- FullBright включение
	local function enableFullBright()
		Lighting.Brightness = 1.5
		Lighting.ClockTime = 12
		Lighting.FogEnd = 1000000
		Lighting.GlobalShadows = false
		Lighting.Ambient = Color3.new(1, 1, 1)
		Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
	end
	
	-- FullBright выключение
	local function disableFullBright()
		for prop, value in pairs(original) do
			Lighting[prop] = value
		end
	end
	
	-- Клик по кнопке
	button.Text = "FullBright OFF"
	
	button.MouseButton1Click:Connect(function()
		isOn = not isOn
	
		if isOn then
			button.Text = "FullBright ON"
			enableFullBright()
		else
			button.Text = "FullBright OFF"
			disableFullBright()
		end
	end)
	
end
coroutine.wrap(OZWB_fake_script)()
local function YLPH_fake_script() -- RemoveShadowButton.LocalScript 
	local script = Instance.new('LocalScript', RemoveShadowButton)

	local Lighting = game:GetService("Lighting")
	local Players = game:GetService("Players")
	
	local player = Players.LocalPlayer
	local button = script.Parent
	
	local shadowsEnabled = Lighting.GlobalShadows -- начальное состояние
	
	local function updateButton()
		if shadowsEnabled then
			button.Text = "NoShadow OFF"
		else
			button.Text = "NoShadow ON"
		end
	end
	
	button.MouseButton1Click:Connect(function()
		shadowsEnabled = not shadowsEnabled
		Lighting.GlobalShadows = shadowsEnabled
		updateButton()
	end)
	
	updateButton()
	
end
coroutine.wrap(YLPH_fake_script)()
local function JXDAOQC_fake_script() -- NoTextures.LocalScript 
	local script = Instance.new('LocalScript', NoTextures)

	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local button = script.Parent
	local replicatedStorage = game:GetService("ReplicatedStorage")
	
	-- Хранилище текстур (original)
	local textureCache = {}
	
	-- Состояние
	local texturesHidden = false
	
	-- Уведомление
	local function notify(text)
		local gui = player:WaitForChild("PlayerGui"):FindFirstChild("ScreenGui")
		local notification = gui and gui:FindFirstChild("NotificationLabel")
		if notification then
			notification.Text = text
			notification.Visible = true
			notification.Size = UDim2.new(0, 304, 0, 44)
			notification.TextTransparency = 0
			notification.BackgroundTransparency = 0.2
	
			task.delay(2.5, function()
				notification:TweenSize(UDim2.new(0, 264, 0, 44), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
				notification.TextTransparency = 1
				notification.BackgroundTransparency = 1
			end)
		end
	end
	
	-- Сохраняем и удаляем текстуры
	local function hideTextures()
		textureCache = {}
	
		for _, obj in ipairs(workspace:GetDescendants()) do
			if obj:IsA("Texture") or obj:IsA("Decal") then
				textureCache[obj] = obj.Texture
				obj.Texture = ""
			elseif obj:IsA("SpecialMesh") or obj:IsA("Mesh") then
				textureCache[obj] = obj.TextureId
				obj.TextureId = ""
			end
		end
	end
	
	-- Восстанавливаем текстуры
	local function restoreTextures()
		for obj, original in pairs(textureCache) do
			if obj and obj.Parent then
				if obj:IsA("Texture") or obj:IsA("Decal") then
					obj.Texture = original
				elseif obj:IsA("SpecialMesh") or obj:IsA("Mesh") then
					obj.TextureId = original
				end
			end
		end
	end
	
	-- Обработка кнопки
	button.MouseButton1Click:Connect(function()
		texturesHidden = not texturesHidden
		if texturesHidden then
			hideTextures()
			button.Text = "RemoveTextures: ON"
		else
			restoreTextures()
			button.Text = "RemoveTextures: OFF"
		end
	end)
	
	-- Начальный текст
	button.Text = "Textures: OFF"
end
coroutine.wrap(JXDAOQC_fake_script)()
local function OURZVO_fake_script() -- Switcher_4.Clickwarp 
	local script = Instance.new('LocalScript', Switcher_4)

	local Players          = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	local TweenService     = game:GetService("TweenService")
	local RunService       = game:GetService("RunService")
	
	local player       = Players.LocalPlayer
	local mouse        = player:GetMouse()
	local gui          = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local tab3Page     = gui.menu.PagesFrame.Tab3Page
	local switcher     = tab3Page.Clickwarp.Switcher         -- TextButton "Switcher"
	local switch       = switcher:WaitForChild("Switch")     -- Frame "Switch"
	local binder       = tab3Page.Clickwarp.Binder           -- TextButton "Binder"
	local label        = binder.Parent                        -- TextLabel "Clickwarp"
	local notification = gui:WaitForChild("NotificationLabel")
	
	-- Цвета и позиции
	local ON_COLOR       = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR      = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR  = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR   = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR  = Color3.fromRGB(12, 12, 12)
	
	local ON_POS  = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	local clickwarpEnabled = false
	local listening        = false
	local bindKey          = Enum.KeyCode.C
	
	-- Устанавливаем прозрачность у Binder (только у кнопки)
	binder.BackgroundTransparency = 0.7
	-- Устанавливаем фон у label
	label.BackgroundColor3 = LABEL_OFF_COLOR
	
	-- Вспомогательная функция Tween
	local function tween(obj, props, time)
		local info = TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tw = TweenService:Create(obj, info, props)
		tw:Play()
	end
	
	-- Функция обновления визуала кнопки Switcher и фона Label
	local function updateSwitcherVisual()
		if clickwarpEnabled then
			tween(switcher, {BackgroundColor3 = ON_COLOR}, 0.3)
			tween(switch, {Position = ON_POS, BackgroundColor3 = SWITCH_ON_COLOR}, 0.3)
			tween(label, {BackgroundColor3 = LABEL_ON_COLOR}, 0.3)
		else
			tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0.3)
			tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0.3)
			tween(label, {BackgroundColor3 = LABEL_OFF_COLOR}, 0.3)
		end
	end
	
	-- Отображение уведомления
	local function notify(text)
		notification.Text = text
		notification.Visible = true
		notification.TextTransparency       = 1
		notification.BackgroundTransparency = 1
	
		local check = notification:FindFirstChild("CheckMark")
		if check then check.ImageTransparency = 1 end
	
		TweenService:Create(notification, TweenInfo.new(0.4), {
			TextTransparency = 0,
			BackgroundTransparency = 0.2,
		}):Play()
	
		if check then
			TweenService:Create(check, TweenInfo.new(0.4), {
				ImageTransparency = 0,
			}):Play()
		end
	
		task.delay(2.5, function()
			TweenService:Create(notification, TweenInfo.new(0.5), {
				TextTransparency = 1,
				BackgroundTransparency = 1,
			}):Play()
			if check then
				TweenService:Create(check, TweenInfo.new(0.5), {
					ImageTransparency = 1,
				}):Play()
			end
		end)
	end
	
	-- Обработка клика по Switcher
	switcher.MouseButton1Click:Connect(function()
		clickwarpEnabled = not clickwarpEnabled
		updateSwitcherVisual()
		local stateText = clickwarpEnabled and "Enabled" or "Disabled"
		notify("    "..stateText.." function: Clickwarp")
	end)
	
	-- Обработка клика по Binder (начинаем слушать)
	binder.MouseButton1Click:Connect(function()
		if listening then return end
		listening = true
		binder.Text = "..."
		notify("Press any key to bind Clickwarp")
	end)
	
	-- Обработка нажатия клавиши для бинда и для включения/выключения
	UserInputService.InputBegan:Connect(function(input, gp)
		if gp or input.UserInputType ~= Enum.UserInputType.Keyboard then return end
	
		if listening then
			bindKey = input.KeyCode
			listening = false
			binder.Text = bindKey.Name:upper()
			clickwarpEnabled = false
			updateSwitcherVisual()
			notify("Bound Clickwarp to "..bindKey.Name)
			return
		end
	
		if input.KeyCode == bindKey then
			clickwarpEnabled = not clickwarpEnabled
			updateSwitcherVisual()
			local stateText = clickwarpEnabled and "Enabled" or "Disabled"
			notify("    "..stateText.." function: Clickwarp")
		end
	end)
	
	-- Телепорт по клику мыши при включённом clickwarp
	UserInputService.InputBegan:Connect(function(input, gp)
		if gp or not clickwarpEnabled then return end
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			local target = mouse.Hit
			if target then
				local char = player.Character
				local hrp = char and char:FindFirstChild("HumanoidRootPart")
				if hrp then
					local humanoid = player.Character:FindFirstChildWhichIsA("Humanoid")
					if humanoid then
						for _, state in ipairs({
							Enum.HumanoidStateType.FallingDown,
							Enum.HumanoidStateType.Ragdoll,
							Enum.HumanoidStateType.Physics,
							Enum.HumanoidStateType.Seated,
							Enum.HumanoidStateType.StrafingNoPhysics
							}) do
							pcall(function()
								humanoid:SetStateEnabled(state, false)
							end)
						end
						pcall(function()
							humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
						end)
					end
					pcall(function()
						if hrp:GetNetworkOwner() ~= player then
							hrp:SetNetworkOwner(player)
						end
					end)
					hrp.Velocity = Vector3.zero
					hrp.RotVelocity = Vector3.zero
					hrp.Anchored = true
					hrp.CFrame = CFrame.new(target.Position + Vector3.new(0, 3, 0))
					task.wait(0.05)
					hrp.Anchored = false
					pcall(function()
						humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
					end)
				end
			end
		end
	end)
	
	-- Начальная установка визуала
	updateSwitcherVisual()
	binder.Text = bindKey.Name:upper()
	
end
coroutine.wrap(OURZVO_fake_script)()
local function XMJN_fake_script() -- Binder.Clickwarp Binder 
	local script = Instance.new('LocalScript', Binder)

	local UserInputService = game:GetService("UserInputService")
	
	local button = script.Parent -- TextButton "Binder"
	
	-- Устанавливаем прозрачность фона только у кнопки Binder
	button.BackgroundTransparency = 0.5
	
	local listening = false
	local bindKey = Enum.KeyCode.C
	
	-- Устанавливаем начальный текст
	button.Text = bindKey.Name:upper()
	
	-- Начинаем прослушку
	local function startListening()
		listening = true
		button.Text = "..."
	end
	
	-- Завершаем прослушку
	local function finishListening(newKey)
		bindKey = newKey
		listening = false
		button.Text = bindKey.Name:upper()
	
		-- Поддерживаем прозрачность фона кнопки
		button.BackgroundTransparency = 0.5
	end
	
	-- Показываем выбранную клавишу (только имя)
	button.Text = bindKey.Name:upper()
	
	-- Начинаем слушать ввод клавиши при клике
	button.MouseButton1Click:Connect(function()
		if listening then return end
		listening = true
		button.Text = "..."
	
		-- Запускаем прослушивание бинда в Switcher
		if _G.StartClickwarpBindListening then
			_G.StartClickwarpBindListening()
		end
	end)
	
	-- Обработка ввода клавиши
	UserInputService.InputBegan:Connect(function(input, gp)
		if gp then return end
		if not listening then return end
		if input.UserInputType ~= Enum.UserInputType.Keyboard then return end
	
		bindKey = input.KeyCode
		listening = false
		button.Text = bindKey.Name:upper()
	
		-- Обновляем bindKey у Switcher через глобальную функцию (если есть)
		if _G.SetClickwarpBindKey then
			_G.SetClickwarpBindKey(bindKey)
		end
	end)
	
	-- Функция для получения текущего бинда (если нужно)
	_G.GetClickwarpBindKey = function()
		return bindKey
	end
	
end
coroutine.wrap(XMJN_fake_script)()
local function SAEAMKY_fake_script() -- Binder.bindertrans 
	local script = Instance.new('LocalScript', Binder)

	local button = script.Parent -- Это должен быть сам TextButton "Binder"
	
	-- Установка прозрачности сразу при инжекте
	button.BackgroundTransparency = 0.7
	
end
coroutine.wrap(SAEAMKY_fake_script)()
local function POAYAPP_fake_script() -- Switcher_5.script 
	local script = Instance.new('LocalScript', Switcher_5)

	local TweenService     = game:GetService("TweenService")
	local Players          = game:GetService("Players")
	local RunService       = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	
	local player = Players.LocalPlayer
	local gui = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local hi = gui.menu.PagesFrame.Tab3Page:WaitForChild("Hi")
	
	local switcher = hi:WaitForChild("Switcher")
	local switch = switcher:WaitForChild("Switch")
	local binder = hi:WaitForChild("Binder")
	local notification = gui:WaitForChild("NotificationLabel")
	
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local hrp = character:WaitForChild("HumanoidRootPart")
	local camera = workspace.CurrentCamera
	
	-- Цвета и позиции
	local ON_COLOR = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR = Color3.fromRGB(12, 12, 12)
	
	local ON_POS = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	local function tween(obj, props, time)
		local info = TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		TweenService:Create(obj, info, props):Play()
	end
	
	local isFlying = false
	local listening = false
	local flyConn
	local savedOffset
	
	local keys = {W=false, A=false, S=false, D=false, Up=false, Down=false}
	local bindKey = Enum.KeyCode.C
	
	local flySpeed = 40
	
	local function notify(text)
		notification.Text = text
		notification.Visible = true
		notification.TextTransparency = 1
		notification.BackgroundTransparency = 1
	
		local check = notification:FindFirstChild("CheckMark")
		if check then check.ImageTransparency = 1 end
	
		tween(notification, {TextTransparency = 0, BackgroundTransparency = 0.2}, 0.4)
		if check then tween(check, {ImageTransparency = 0}, 0.4) end
	
		task.delay(2.5, function()
			tween(notification, {TextTransparency = 1, BackgroundTransparency = 1}, 0.5)
			if check then tween(check, {ImageTransparency = 1}, 0.5) end
		end)
	end
	
	local function cleanup()
		isFlying = false
		if flyConn then flyConn:Disconnect() end
		humanoid:ChangeState(Enum.HumanoidStateType.Running)
		humanoid.AutoRotate = true
		humanoid.CameraOffset = savedOffset or Vector3.zero
		hrp.Velocity = Vector3.zero
	end
	
	local function toggleFly()
		isFlying = not isFlying
	
		if isFlying then
			notify("  Enabled Function: Noclip")
	
			tween(switcher, {BackgroundColor3 = ON_COLOR}, 0.3)
			tween(switch, {Position = ON_POS, BackgroundColor3 = SWITCH_ON_COLOR}, 0.3)
			tween(hi, {BackgroundColor3 = LABEL_ON_COLOR}, 0.3)
	
			savedOffset = humanoid.CameraOffset
			humanoid.AutoRotate = false
			humanoid.CameraOffset = Vector3.zero
	
			flyConn = RunService.RenderStepped:Connect(function()
				if not isFlying or not character or not hrp then return end
	
				local cf = camera.CFrame
				local moveVec = Vector3.zero
	
				if keys.W then moveVec += cf.LookVector end
				if keys.S then moveVec -= cf.LookVector end
				if keys.A then moveVec -= cf.RightVector end
				if keys.D then moveVec += cf.RightVector end
				if keys.Up then moveVec += Vector3.new(0,1,0) end
				if keys.Down then moveVec -= Vector3.new(0,1,0) end
	
				if moveVec.Magnitude > 0 then
					local dir = moveVec.Unit
					humanoid:Move(dir, true)
					hrp.Velocity = dir * flySpeed
				else
					humanoid:Move(Vector3.zero, true)
					hrp.Velocity = Vector3.zero
				end
			end)
		else
			notify("  Disabled Function: Noclip")
	
			tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0.3)
			tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0.3)
			tween(hi, {BackgroundColor3 = LABEL_OFF_COLOR}, 0.3)
	
			cleanup()
		end
	end
	
	local function parseBindKey(text)
		local key = text:match("Bind key:%s*(%S+)")
		if key then
			for _, v in pairs(Enum.KeyCode:GetEnumItems()) do
				if v.Name:lower() == key:lower() then return v end
			end
		end
		return nil
	end
	
	bindKey = parseBindKey(binder.Text) or Enum.KeyCode.C
	binder.Text = bindKey.Name
	
	switcher.MouseButton1Click:Connect(toggleFly)
	
	binder.MouseButton1Click:Connect(function()
		if listening then return end
		listening = true
		binder.Text = "..."
	end)
	
	UserInputService.InputBegan:Connect(function(input, gp)
		if gp or input.UserInputType ~= Enum.UserInputType.Keyboard then return end
		local kc = input.KeyCode
	
		if listening then
			bindKey = kc
			binder.Text = kc.Name
			listening = false
			return
		end
	
		if kc == Enum.KeyCode.W then keys.W = true end
		if kc == Enum.KeyCode.S then keys.S = true end
		if kc == Enum.KeyCode.A then keys.A = true end
		if kc == Enum.KeyCode.D then keys.D = true end
		if kc == Enum.KeyCode.Space then keys.Up = true end
		if kc == Enum.KeyCode.LeftShift then keys.Down = true end
	
		if kc == bindKey then
			toggleFly()
		end
	end)
	
	UserInputService.InputEnded:Connect(function(input, gp)
		if gp or input.UserInputType ~= Enum.UserInputType.Keyboard then return end
		local kc = input.KeyCode
		if kc == Enum.KeyCode.W then keys.W = false end
		if kc == Enum.KeyCode.S then keys.S = false end
		if kc == Enum.KeyCode.A then keys.A = false end
		if kc == Enum.KeyCode.D then keys.D = false end
		if kc == Enum.KeyCode.Space then keys.Up = false end
		if kc == Enum.KeyCode.LeftShift then keys.Down = false end
	end)
	
	player.CharacterAdded:Connect(function(char)
		character = char
		humanoid = char:WaitForChild("Humanoid")
		hrp = char:WaitForChild("HumanoidRootPart")
	end)
end
coroutine.wrap(POAYAPP_fake_script)()
local function RXEB_fake_script() -- Binder_2.NoClip binder 
	local script = Instance.new('LocalScript', Binder_2)

	local UserInputService = game:GetService("UserInputService")
	
	local button = script.Parent -- TextButton "Binder"
	
	-- Устанавливаем прозрачность фона только у кнопки Binder
	button.BackgroundTransparency = 0.7
	
	local listening = false
	local bindKey = Enum.KeyCode.C
	
	-- Устанавливаем начальный текст
	button.Text = bindKey.Name:upper()
	
	-- Начинаем прослушку
	local function startListening()
		listening = true
		button.Text = "..."
	end
	
	-- Завершаем прослушку
	local function finishListening(newKey)
		bindKey = newKey
		listening = false
		button.Text = bindKey.Name:upper()
	
		-- Поддерживаем прозрачность фона кнопки
		button.BackgroundTransparency = 0.5
	end
	
	-- Отслеживание ввода клавиши
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if not listening then return end
		if input.UserInputType == Enum.UserInputType.Keyboard then
			finishListening(input.KeyCode)
		end
	end)
	
	-- Обработка клика по кнопке
	button.MouseButton1Click:Connect(function()
		startListening()
	end)
	
	-- Функция для получения bindKey снаружи, если нужно
	_G.GetBindKey = function()
		return bindKey
	end
	
end
coroutine.wrap(RXEB_fake_script)()
local function RGCLMIW_fake_script() -- Binder_2.bindertrans 
	local script = Instance.new('LocalScript', Binder_2)

	local button = script.Parent -- Это должен быть сам TextButton "Binder"
	
	-- Установка прозрачности сразу при инжекте
	button.BackgroundTransparency = 0.7
	
end
coroutine.wrap(RGCLMIW_fake_script)()
local function USTVBTC_fake_script() -- AntiAFKButton.LocalScript 
	local script = Instance.new('LocalScript', AntiAFKButton)

	local Players = game:GetService("Players")
	local TweenService = game:GetService("TweenService")
	local UserInputService = game:GetService("UserInputService")
	local VirtualInputManager = game:GetService("VirtualInputManager")
	
	local player = Players.LocalPlayer
	local gui = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	
	local menu = gui:WaitForChild("menu")
	local button = script.Parent
	local notification = gui:WaitForChild("NotificationLabel")
	local checkMark = notification:FindFirstChild("CheckMark")
	
	local antiAFKEnabled = false
	local motionConnection = nil
	local keyLoopRunning = false
	
	local function showNotification(text)
		notification.Visible = true
		notification.Text = text
		notification.TextTransparency = 1
		notification.BackgroundTransparency = 1
		if checkMark then checkMark.ImageTransparency = 1 end
	
		TweenService:Create(notification, TweenInfo.new(0.4), {
			TextTransparency = 0,
			BackgroundTransparency = 0.2
		}):Play()
	
		if checkMark then
			TweenService:Create(checkMark, TweenInfo.new(0.4), {
				ImageTransparency = 0
			}):Play()
		end
	
		task.delay(3, function()
			TweenService:Create(notification, TweenInfo.new(0.5), {
				TextTransparency = 1,
				BackgroundTransparency = 1
			}):Play()
	
			if checkMark then
				TweenService:Create(checkMark, TweenInfo.new(0.5), {
					ImageTransparency = 1
				}):Play()
			end
		end)
	end
	
	local function fadeOutMenu()
		local all = {}
		for _, obj in ipairs(menu:GetDescendants()) do
			if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("ImageLabel") or obj:IsA("Frame") then
				table.insert(all, obj)
			end
		end
		table.insert(all, menu)
	
		for _, obj in ipairs(all) do
			local props = {}
			if obj:IsA("TextLabel") or obj:IsA("TextButton") then
				props.TextTransparency = 1
			end
			if obj:IsA("ImageLabel") then
				props.ImageTransparency = 1
			end
			props.BackgroundTransparency = 1
			TweenService:Create(obj, TweenInfo.new(0.4), props):Play()
		end
	
		task.delay(0.45, function()
			menu.Visible = false
		end)
	end
	
	local function fadeInMenu()
		menu.Visible = true
		local all = {}
		for _, obj in ipairs(menu:GetDescendants()) do
			if obj:IsA("TextLabel") or obj:IsA("TextButton") or obj:IsA("ImageLabel") or obj:IsA("Frame") then
				table.insert(all, obj)
			end
		end
		table.insert(all, menu)
	
		for _, obj in ipairs(all) do
			local props = {}
			if obj:IsA("TextLabel") or obj:IsA("TextButton") then
				props.TextTransparency = 0
			end
			if obj:IsA("ImageLabel") then
				props.ImageTransparency = 0
			end
			props.BackgroundTransparency = 0.2
			TweenService:Create(obj, TweenInfo.new(0.4), props):Play()
		end
	end
	
	local function holdADKeys()
		if keyLoopRunning then return end
		keyLoopRunning = true
	
		task.spawn(function()
			while antiAFKEnabled do
				VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.A, false, nil)
				VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.D, false, nil)
				task.wait(1)
			end
			VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.A, false, nil)
			VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.D, false, nil)
		end)
	end
	
	local function disableAntiAFK(triggeredByMotion)
		if not antiAFKEnabled then return end
		antiAFKEnabled = false
		button.Text = "AntiAFK OFF"
		keyLoopRunning = false
	
		if motionConnection then
			motionConnection:Disconnect()
			motionConnection = nil
		end
	
		if triggeredByMotion then
			showNotification("    Motion Detected")
			fadeInMenu()
			task.delay(1, function()
				showNotification("    AntiAFK Disabled")
			end)
		else
			showNotification("    AntiAFK Disabled")
		end
	end
	
	local function enableAntiAFK()
		if antiAFKEnabled then return end
		antiAFKEnabled = true
		button.Text = "AntiAFK ON"
	
		fadeOutMenu()
		showNotification("    AntiAFK Enabled")
		holdADKeys()
	
		motionConnection = UserInputService.InputBegan:Connect(function(input, gp)
			if gp then return end
			local code = input.KeyCode
			if code == Enum.KeyCode.W or code == Enum.KeyCode.A or code == Enum.KeyCode.S or code == Enum.KeyCode.D then
				disableAntiAFK(true)
			end
		end)
	end
	
	button.MouseButton1Click:Connect(function()
		if antiAFKEnabled then
			disableAntiAFK(false)
		else
			enableAntiAFK()
		end
	end)
	
end
coroutine.wrap(USTVBTC_fake_script)()
local function TNDEM_fake_script() -- Switcher_6.Speed 
	local script = Instance.new('LocalScript', Switcher_6)

	local TweenService     = game:GetService("TweenService")
	local Players          = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	
	local player = Players.LocalPlayer
	local gui = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local tab5page = gui.menu.PagesFrame.Tab5Page
	local mainLabel = tab5page:WaitForChild("Speed")  -- Тут лежат Switcher и Binder
	
	local switcher = mainLabel:WaitForChild("Switcher")   -- TextButton
	local switch = switcher:WaitForChild("Switch")        -- Frame внутри Switcher для анимации ползунка
	local binder = mainLabel:WaitForChild("Binder")       -- TextButton
	
	local notification = gui:WaitForChild("NotificationLabel")
	
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	
	-- Цвета и позиции для анимации Switcher.Switch
	local ON_COLOR = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR = Color3.fromRGB(12, 12, 12)
	
	local ON_POS = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	local function tween(obj, props, time)
		local info = TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		TweenService:Create(obj, info, props):Play()
	end
	
	local isSpeedEnabled = false
	local listening = false
	local bindKey = Enum.KeyCode.C
	
	local minSpeed = 16
	local maxSpeed = 100
	local currentSpeed = minSpeed
	
	-- Инициализация стилей
	switch.Position = OFF_POS
	switch.BackgroundColor3 = SWITCH_OFF_COLOR
	switcher.BackgroundColor3 = OFF_COLOR
	mainLabel.BackgroundColor3 = LABEL_OFF_COLOR
	
	local function notify(text)
		notification.Text = text
		notification.Visible = true
		notification.TextTransparency = 1
		notification.BackgroundTransparency = 1
	
		local check = notification:FindFirstChild("CheckMark")
		if check then check.ImageTransparency = 1 end
	
		tween(notification, {TextTransparency = 0, BackgroundTransparency = 0.2}, 0.4)
		if check then tween(check, {ImageTransparency = 0}, 0.4) end
	
		task.delay(2.5, function()
			tween(notification, {TextTransparency = 1, BackgroundTransparency = 1}, 0.5)
			if check then tween(check, {ImageTransparency = 1}, 0.5) end
		end)
	end
	
	local function toggleSpeed()
		isSpeedEnabled = not isSpeedEnabled
	
		if isSpeedEnabled then
			notify("    Enabled Function: SpeedHack")
			tween(switcher, {BackgroundColor3 = ON_COLOR}, 0.3)
			tween(switch, {Position = ON_POS, BackgroundColor3 = SWITCH_ON_COLOR}, 0.3)
			tween(mainLabel, {BackgroundColor3 = LABEL_ON_COLOR}, 0.3)
	
			humanoid.WalkSpeed = currentSpeed  -- применяем текущую скорость
		else
			notify("    Disabled Function: SpeedHack")
			tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0.3)
			tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0.3)
			tween(mainLabel, {BackgroundColor3 = LABEL_OFF_COLOR}, 0.3)
	
			humanoid.WalkSpeed = 16 -- Стандартная скорость
		end
	end
	
	-- Глобальная функция для установки включения скорости из слайдера
	_G.SetSpeedEnabled = function(enabled)
		isSpeedEnabled = enabled
		if isSpeedEnabled then
			humanoid.WalkSpeed = currentSpeed
		else
			humanoid.WalkSpeed = 16
		end
		-- Обновляем анимацию переключателя
		if enabled then
			tween(switcher, {BackgroundColor3 = ON_COLOR}, 0.3)
			tween(switch, {Position = ON_POS, BackgroundColor3 = SWITCH_ON_COLOR}, 0.3)
			tween(mainLabel, {BackgroundColor3 = LABEL_ON_COLOR}, 0.3)
		else
			tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0.3)
			tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0.3)
			tween(mainLabel, {BackgroundColor3 = LABEL_OFF_COLOR}, 0.3)
		end
	end
	
	switcher.MouseButton1Click:Connect(toggleSpeed)
	
	binder.BackgroundTransparency = 0.7
	binder.Text = bindKey.Name:upper()
	
	local function startListening()
		listening = true
		binder.Text = "..."
	end
	
	local function finishListening(newKey)
		bindKey = newKey
		listening = false
		binder.Text = bindKey.Name:upper()
		binder.BackgroundTransparency = 0.5
	end
	
	binder.MouseButton1Click:Connect(function()
		if listening then return end
		startListening()
	end)
	
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
	
		if listening and input.UserInputType == Enum.UserInputType.Keyboard then
			finishListening(input.KeyCode)
			return
		end
	
		if input.KeyCode == bindKey then
			toggleSpeed()
		end
	end)
	
	player.CharacterAdded:Connect(function(char)
		character = char
		humanoid = char:WaitForChild("Humanoid")
		if isSpeedEnabled then
			humanoid.WalkSpeed = currentSpeed
		end
	end)
	
	-- Функция для обновления текущей скорости из слайдера
	_G.SetCurrentSpeed = function(speed)
		currentSpeed = math.clamp(speed, minSpeed, maxSpeed)
		if isSpeedEnabled and humanoid and humanoid.Parent then
			humanoid.WalkSpeed = currentSpeed
		end
	end
	
end
coroutine.wrap(TNDEM_fake_script)()
local function FHSNSFV_fake_script() -- Binder_3.bindertrans 
	local script = Instance.new('LocalScript', Binder_3)

	local button = script.Parent -- Это должен быть сам TextButton "Binder"
	
	-- Установка прозрачности сразу при инжекте
	button.BackgroundTransparency = 0.7
	
end
coroutine.wrap(FHSNSFV_fake_script)()
local function JAMZGV_fake_script() -- Binder_3.LocalScript 
	local script = Instance.new('LocalScript', Binder_3)

	local UserInputService = game:GetService("UserInputService")
	
	local binder = script.Parent -- TextButton "Binder"
	local listening = false
	local bindKey = Enum.KeyCode.C -- стандартная клавиша
	
	-- Установка начального текста
	binder.Text = bindKey.Name:upper()
	binder.BackgroundTransparency = 0.5
	
	-- Запуск прослушивания
	binder.MouseButton1Click:Connect(function()
		if listening then return end
		listening = true
		binder.Text = "..."
	end)
	
	-- Обработка нажатия клавиши
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if listening and input.UserInputType == Enum.UserInputType.Keyboard then
			bindKey = input.KeyCode
			binder.Text = bindKey.Name:upper()
			listening = false
		end
	end)
	
	-- Функция, которую можно вызвать из других скриптов, чтобы получить текущую клавишу
	_G.GetSpeedBindKey = function()
		return bindKey
	end
	
end
coroutine.wrap(JAMZGV_fake_script)()
local function RNSEP_fake_script() -- Slider.LocalScript 
	local script = Instance.new('LocalScript', Slider)

	local UserInputService = game:GetService("UserInputService")
	
	local sliderFrame = script.Parent       -- Frame, в котором лежит этот скрипт
	local bar = sliderFrame:WaitForChild("Bar")
	local handle = sliderFrame:WaitForChild("Handle")
	local label = sliderFrame:WaitForChild("ValueLabel")
	
	-- Настройки скорости (совпадают с твоим Switcher-скриптом)
	local minSpeed = 16
	local maxSpeed = 100
	
	local dragging = false
	
	local function updateSpeedFromX(x)
		local barStart = bar.AbsolutePosition.X
		local barWidth = bar.AbsoluteSize.X
	
		local relX = math.clamp((x - barStart) / barWidth, 0, 1)
		local speed = math.floor(minSpeed + (maxSpeed - minSpeed) * relX)
	
		label.Text = "Speed: " .. speed
	
		handle.Position = UDim2.new(relX, -handle.AbsoluteSize.X / 2, 0.5, -handle.AbsoluteSize.Y / 2)
	
		-- Вызов глобальной функции, чтобы установить скорость
		if _G.SetCurrentSpeed then
			_G.SetCurrentSpeed(speed)
		end
	end
	
	-- Начало перетаскивания по Bar
	bar.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			updateSpeedFromX(input.Position.X)
		end
	end)
	
	-- Начало перетаскивания по всему Frame слайдера
	sliderFrame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			updateSpeedFromX(input.Position.X)
		end
	end)
	
	-- Движение мыши при перетаскивании
	UserInputService.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			updateSpeedFromX(input.Position.X)
		end
	end)
	
	-- Окончание перетаскивания
	UserInputService.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = false
		end
	end)
	
	-- При старте позиционируем слайдер посередине (по умолчанию)
	sliderFrame:GetPropertyChangedSignal("AbsolutePosition"):Connect(function()
		updateSpeedFromX(bar.AbsolutePosition.X + bar.AbsoluteSize.X / 2)
	end)
	
	-- Первый вызов для инициализации (если размер UI уже доступен)
	if bar.AbsoluteSize.X > 0 then
		updateSpeedFromX(bar.AbsolutePosition.X + bar.AbsoluteSize.X / 2)
	else
		task.delay(0.1, function()
			updateSpeedFromX(bar.AbsolutePosition.X + bar.AbsoluteSize.X / 2)
		end)
	end
end
coroutine.wrap(RNSEP_fake_script)()
local function HDPHM_fake_script() -- Switcher_7.GM 
	local script = Instance.new('LocalScript', Switcher_7)

	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	
	local player = Players.LocalPlayer
	local gui = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local godLabel = gui.menu.PagesFrame.Tab5Page:WaitForChild("GodMode")
	
	local switcher = godLabel:WaitForChild("Switcher") -- TextButton
	local switch = switcher:WaitForChild("Switch")     -- Frame
	local notification = gui:WaitForChild("NotificationLabel")
	
	local character = player.Character or player.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	
	-- Цвета и позиции
	local ON_COLOR = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR = Color3.fromRGB(12, 12, 12)
	
	local ON_POS = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	local isEnabled = false
	local regenConnection
	
	-- Tween helper
	local function tween(obj, props, time)
		local info = TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		TweenService:Create(obj, info, props):Play()
	end
	
	-- Notification
	local function notify(text)
		notification.Text = text
		notification.Visible = true
		notification.TextTransparency = 1
		notification.BackgroundTransparency = 1
	
		local check = notification:FindFirstChild("CheckMark")
		if check then check.ImageTransparency = 1 end
	
		tween(notification, {TextTransparency = 0, BackgroundTransparency = 0.2}, 0.3)
		if check then tween(check, {ImageTransparency = 0}, 0.3) end
	
		task.delay(2.5, function()
			tween(notification, {TextTransparency = 1, BackgroundTransparency = 1}, 0.4)
			if check then tween(check, {ImageTransparency = 1}, 0.4) end
		end)
	end
	
	-- Toggle функция
	local function toggleGodMode()
		isEnabled = not isEnabled
	
		if isEnabled then
			tween(switcher, {BackgroundColor3 = ON_COLOR}, 0.3)
			tween(switch, {Position = ON_POS, BackgroundColor3 = SWITCH_ON_COLOR}, 0.3)
			tween(godLabel, {BackgroundColor3 = LABEL_ON_COLOR}, 0.3)
	
			regenConnection = game:GetService("RunService").Heartbeat:Connect(function()
				if humanoid.Health < humanoid.MaxHealth then
					humanoid.Health = math.min(humanoid.Health + 5, humanoid.MaxHealth)
				end
				task.wait(0.5)
			end)
		else
			tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0.3)
			tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0.3)
			tween(godLabel, {BackgroundColor3 = LABEL_OFF_COLOR}, 0.3)
	
			if regenConnection then
				regenConnection:Disconnect()
				regenConnection = nil
			end
		end
	end
	
	-- Перезапись Character при респавне
	player.CharacterAdded:Connect(function(char)
		character = char
		humanoid = char:WaitForChild("Humanoid")
		if isEnabled and not regenConnection then
			toggleGodMode()
		end
	end)
	
	-- Подключение к кнопке
	switcher.MouseButton1Click:Connect(toggleGodMode)
	
end
coroutine.wrap(HDPHM_fake_script)()
local function DPJJ_fake_script() -- ReloadShoot.ReloadShoot 
	local script = Instance.new('LocalScript', ReloadShoot)

	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local button = script.Parent  -- Привязано к GUI кнопке
	local replicatedStorage = game:GetService("ReplicatedStorage")
	
	-- Состояние
	local shootWhileReloading = false
	
	-- Обновление текста кнопки
	local function updateButtonText()
		button.Text = shootWhileReloading and "ShootReload ON" or "ShootReload OFF"
	end
	
	-- Уведомление
	local function notify(text)
		local gui = player:WaitForChild("PlayerGui"):FindFirstChild("ScreenGui")
		if gui then
			local label = gui:FindFirstChild("NotificationLabel")
			if label then
				label.Text = text
				label.Visible = true
				label.Size = UDim2.new(0, 304, 0, 44)
				label.TextTransparency = 0
				label.BackgroundTransparency = 0.2
	
				task.delay(2.5, function()
					label:TweenSize(UDim2.new(0, 264, 0, 44), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
					label.TextTransparency = 1
					label.BackgroundTransparency = 1
				end)
			end
		end
	end
	
	-- Перехват перезарядки
	local function hookReload()
		if not player.Character then return end
		local tools = player.Character:GetChildren()
		for _, tool in ipairs(tools) do
			if tool:IsA("Tool") and tool:FindFirstChild("Reloading") then
				local reloadValue = tool:FindFirstChild("Reloading")
				reloadValue:GetPropertyChangedSignal("Value"):Connect(function()
					if shootWhileReloading and reloadValue.Value == true then
						reloadValue.Value = false
					end
				end)
			end
		end
	end
	
	-- Подключаем
	button.MouseButton1Click:Connect(function()
		shootWhileReloading = not shootWhileReloading
		updateButtonText()
		notify((shootWhileReloading and "    Enabled" or "    Disabled") .. " Function: Shoot While Reloading")
		hookReload()
	end)
	
	updateButtonText()
	
end
coroutine.wrap(DPJJ_fake_script)()
local function WBSJLZ_fake_script() -- NoSpread.NoSpread 
	local script = Instance.new('LocalScript', NoSpread)

	local Players       = game:GetService("Players")
	local TweenService  = game:GetService("TweenService")
	local RunService    = game:GetService("RunService")
	
	local player        = Players.LocalPlayer
	local gui           = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local button        = script.Parent
	local notification  = gui:WaitForChild("NotificationLabel")
	
	local noSpreadEnabled = false
	
	local DEFAULT_SIZE = UDim2.new(0, 264, 0, 44)
	local NOTIFY_SIZE  = UDim2.new(0, 304, 0, 44)
	
	-- Уведомление
	local function notify(text)
		notification.Text = text
		notification.Visible = true
		notification.Size = NOTIFY_SIZE
		notification.TextTransparency = 1
		notification.BackgroundTransparency = 1
	
		local check = notification:FindFirstChild("CheckMark")
		if check then check.ImageTransparency = 1 end
	
		TweenService:Create(notification, TweenInfo.new(0.4), {
			TextTransparency = 0,
			BackgroundTransparency = 0.2
		}):Play()
	
		if check then
			TweenService:Create(check, TweenInfo.new(0.4), {
				ImageTransparency = 0,
			}):Play()
		end
	
		task.delay(2.5, function()
			TweenService:Create(notification, TweenInfo.new(0.5), {
				TextTransparency = 1,
				BackgroundTransparency = 1
			}):Play()
	
			if check then
				TweenService:Create(check, TweenInfo.new(0.5), {
					ImageTransparency = 1,
				}):Play()
			end
	
			task.delay(0.5, function()
				notification.Size = DEFAULT_SIZE
			end)
		end)
	end
	
	-- Убираем разброс
	local function removeSpread()
		local character = player.Character
		if not character then return end
	
		local tool = character:FindFirstChildOfClass("Tool")
		if not tool then return end
	
		for _, v in pairs(tool:GetDescendants()) do
			if v:IsA("NumberValue") and v.Name:lower():find("spread") then
				v.Value = 0
			elseif v:IsA("Vector3Value") and v.Name:lower():find("spread") then
				v.Value = Vector3.zero
			end
		end
	end
	
	-- Кнопка
	button.MouseButton1Click:Connect(function()
		noSpreadEnabled = not noSpreadEnabled
	
		if noSpreadEnabled then
			button.Text = "No Spread ON"
			notify("   Enabled Function: No Spread")
			removeSpread()
		else
			button.Text = "No Spread OFF"
			notify("   Disabled Function: No Spread")
		end
	end)
	
	-- Повторяем каждый кадр
	RunService.RenderStepped:Connect(function()
		if noSpreadEnabled then
			removeSpread()
		end
	end)
	
end
coroutine.wrap(WBSJLZ_fake_script)()
local function SKJT_fake_script() -- NoReload.NoReload 
	local script = Instance.new('LocalScript', NoReload)

	local Players       = game:GetService("Players")
	local TweenService  = game:GetService("TweenService")
	local RunService    = game:GetService("RunService")
	
	local player        = Players.LocalPlayer
	local gui           = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local button        = script.Parent
	local notification  = gui:WaitForChild("NotificationLabel")
	
	local noReloadEnabled = false
	
	local DEFAULT_SIZE = UDim2.new(0, 264, 0, 44)
	local NOTIFY_SIZE  = UDim2.new(0, 304, 0, 44)
	
	-- Функция уведомлений
	local function notify(text)
		notification.Text = text
		notification.Visible = true
		notification.Size = NOTIFY_SIZE
		notification.TextTransparency = 1
		notification.BackgroundTransparency = 1
	
		local check = notification:FindFirstChild("CheckMark")
		if check then check.ImageTransparency = 1 end
	
		TweenService:Create(notification, TweenInfo.new(0.4), {
			TextTransparency = 0,
			BackgroundTransparency = 0.2
		}):Play()
	
		if check then
			TweenService:Create(check, TweenInfo.new(0.4), {
				ImageTransparency = 0,
			}):Play()
		end
	
		task.delay(2.5, function()
			TweenService:Create(notification, TweenInfo.new(0.5), {
				TextTransparency = 1,
				BackgroundTransparency = 1
			}):Play()
	
			if check then
				TweenService:Create(check, TweenInfo.new(0.5), {
					ImageTransparency = 1,
				}):Play()
			end
	
			task.delay(0.5, function()
				notification.Size = DEFAULT_SIZE
			end)
		end)
	end
	
	-- Удаление анимации перезарядки
	local function disableReload()
		local character = player.Character
		if not character then return end
	
		local tool = character:FindFirstChildOfClass("Tool")
		if not tool then return end
	
		for _, anim in ipairs(tool:GetDescendants()) do
			if anim:IsA("Animation") and anim.Name:lower():find("reload") then
				anim:Destroy()
			end
		end
	end
	
	-- Кнопка GUI
	button.MouseButton1Click:Connect(function()
		noReloadEnabled = not noReloadEnabled
	
		if noReloadEnabled then
			button.Text = "No Reload ON"
			notify("   Enabled Function: No Reload")
			disableReload()
		else
			button.Text = "No Reload OFF"
			notify("   Disabled Function: No Reload")
		end
	end)
	
	-- Повторно удаляем анимации при каждом кадре (если функция включена)
	RunService.RenderStepped:Connect(function()
		if noReloadEnabled then
			disableReload()
		end
	end)
	
end
coroutine.wrap(SKJT_fake_script)()
local function HTYRST_fake_script() -- InfinityAmmo.InfinityAmmo 
	local script = Instance.new('LocalScript', InfinityAmmo)

	local Players       = game:GetService("Players")
	local TweenService  = game:GetService("TweenService")
	
	local player        = Players.LocalPlayer
	local gui           = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local button        = script.Parent
	local notification  = gui:WaitForChild("NotificationLabel")
	
	local infiniteAmmoEnabled = false
	
	local DEFAULT_SIZE = UDim2.new(0, 264, 0, 44)
	local NOTIFY_SIZE  = UDim2.new(0, 304, 0, 44)
	
	local function notify(text)
		notification.Text = text
		notification.Visible = true
		notification.TextTransparency = 1
		notification.BackgroundTransparency = 1
	
		notification.Size = NOTIFY_SIZE
	
		local check = notification:FindFirstChild("CheckMark")
		if check then
			check.ImageTransparency = 1
		end
	
		TweenService:Create(notification, TweenInfo.new(0.4), {
			TextTransparency       = 0,
			BackgroundTransparency = 0.2,
		}):Play()
	
		if check then
			TweenService:Create(check, TweenInfo.new(0.4), {
				ImageTransparency = 0,
			}):Play()
		end
	
		task.delay(2.5, function()
			TweenService:Create(notification, TweenInfo.new(0.5), {
				TextTransparency       = 1,
				BackgroundTransparency = 1,
			}):Play()
	
			if check then
				TweenService:Create(check, TweenInfo.new(0.5), {
					ImageTransparency = 1,
				}):Play()
			end
	
			task.delay(0.5, function()
				notification.Size = DEFAULT_SIZE
			end)
		end)
	end
	
	local function setInfiniteAmmo()
		local character = player.Character
		if not character then return end
	
		local tool = character:FindFirstChildOfClass("Tool")
		if not tool then return end
	
		local ammoValue = tool:FindFirstChild("AmmoCount") -- замени на своё имя
		if ammoValue and ammoValue:IsA("IntValue") then
			ammoValue.Value = math.huge
		end
	end
	
	button.MouseButton1Click:Connect(function()
		infiniteAmmoEnabled = not infiniteAmmoEnabled
	
		if infiniteAmmoEnabled then
			button.Text = "Infinity Ammo ON"
			notify("     Enabled Function: Infinity Ammo")
			setInfiniteAmmo()
		else
			button.Text = "Infinity Ammo OFF"
			notify("     Disabled Function: Infinity Ammo")
		end
	end)
	
	game:GetService("RunService").RenderStepped:Connect(function()
		if infiniteAmmoEnabled then
			setInfiniteAmmo()
		end
	end)
	
end
coroutine.wrap(HTYRST_fake_script)()
local function SFQHCOH_fake_script() -- Switcher_8.NoReload 
	local script = Instance.new('LocalScript', Switcher_8)

	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	local UserInputService = game:GetService("UserInputService")
	
	local player = Players.LocalPlayer
	local gui = player:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local pagesFrame = gui.menu.PagesFrame
	local tabCombat = pagesFrame:WaitForChild("Tab7Page") -- Вкладка Combat (создай в GUI)
	local noReloadLabel = tabCombat:WaitForChild("NoReloadLabel") -- Label для названия функции
	local switcher = noReloadLabel:WaitForChild("Switcher") -- TextButton Switcher
	local switch = switcher:WaitForChild("Switch") -- Frame внутри Switcher
	local label = noReloadLabel -- Для изменения цвета фона
	
	-- Цвета и позиции, как у тебя
	local ON_COLOR = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR = Color3.fromRGB(12, 12, 12)
	
	local ON_POS = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	local noReloadEnabled = false
	
	-- Для поиска RemoteEvents
	local function findRemoteEvents()
		local containers = {game:GetService("ReplicatedStorage"), workspace, player}
		local events = {}
	
		for _, container in pairs(containers) do
			for _, obj in pairs(container:GetDescendants()) do
				if obj:IsA("RemoteEvent") then
					table.insert(events, obj)
				end
			end
		end
		return events
	end
	
	local remoteEvents = findRemoteEvents()
	print("NoReload: Found "..#remoteEvents.." RemoteEvents")
	
	local shootKeywords = {"shoot", "fire", "attack", "weapon", "bullet", "gun"}
	local reloadKeywords = {"reload", "magazine", "clip", "ammo"}
	
	local lastFiredRemote = nil
	local fireServerHooks = {}
	
	-- Перехват FireServer у всех RemoteEvents
	local function hookRemoteEvents()
		for _, remote in pairs(remoteEvents) do
			if fireServerHooks[remote] then continue end -- Уже захукано
			local oldFireServer = remote.FireServer
			fireServerHooks[remote] = oldFireServer
	
			remote.FireServer = function(self, ...)
				local args = {...}
				local isShoot = false
				local isReload = false
	
				for _, arg in pairs(args) do
					if type(arg) == "string" then
						local argLower = arg:lower()
						for _, keyword in pairs(shootKeywords) do
							if string.find(argLower, keyword) then
								isShoot = true
								break
							end
						end
						for _, keyword in pairs(reloadKeywords) do
							if string.find(argLower, keyword) then
								isReload = true
								break
							end
						end
					end
				end
	
				if isShoot then
					lastFiredRemote = self
					--print("[NoReload] Shoot RemoteEvent:", self.Name)
				end
	
				if isReload and noReloadEnabled then
					-- Блокируем вызов перезарядки
					--print("[NoReload] Reload blocked:", self.Name)
					return
				end
	
				return oldFireServer(self, ...)
			end
		end
	end
	
	local function unhookRemoteEvents()
		for remote, oldFunc in pairs(fireServerHooks) do
			if remote and remote.Parent then
				remote.FireServer = oldFunc
			end
		end
		fireServerHooks = {}
	end
	
	local function tween(obj, props, time)
		local info = TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		TweenService:Create(obj, info, props):Play()
	end
	
	local function toggleNoReload()
		noReloadEnabled = not noReloadEnabled
	
		if noReloadEnabled then
			hookRemoteEvents()
			tween(switcher, {BackgroundColor3 = ON_COLOR}, 0.3)
			tween(switch, {Position = ON_POS, BackgroundColor3 = SWITCH_ON_COLOR}, 0.3)
			tween(label, {BackgroundColor3 = LABEL_ON_COLOR}, 0.3)
			print("No Reload Enabled")
		else
			unhookRemoteEvents()
			tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0.3)
			tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0.3)
			tween(label, {BackgroundColor3 = LABEL_OFF_COLOR}, 0.3)
			print("No Reload Disabled")
		end
	end
	
	switcher.MouseButton1Click:Connect(toggleNoReload)
	
	-- Инициализация цветов по умолчанию (выкл)
	tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0)
	tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0)
	tween(label, {BackgroundColor3 = LABEL_OFF_COLOR}, 0)
	
end
coroutine.wrap(SFQHCOH_fake_script)()
local function BZXH_fake_script() -- NoReloadLabel.LocalScript 
	local script = Instance.new('LocalScript', NoReloadLabel)

	local label = script.Parent -- или путь к твоему TextLabel
	label.Font = Enum.Font.SourceSans
	
	
end
coroutine.wrap(BZXH_fake_script)()
local function AABF_fake_script() -- Switcher_9.KnifeRange 
	local script = Instance.new('LocalScript', Switcher_9)

	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	
	local LocalPlayer = Players.LocalPlayer
	local gui = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local pagesFrame = gui.menu.PagesFrame
	local tab7Page = pagesFrame:WaitForChild("Tab7Page")
	
	local knifeRangeFrame = tab7Page:WaitForChild("KnifeRangeExtended") -- твоя панель
	local switcher = knifeRangeFrame:WaitForChild("Switcher") -- TextButton Switcher
	local switch = switcher:WaitForChild("Switch") -- Frame бегунок
	
	-- Цвета и позиции для Switcher
	local ON_COLOR = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR = Color3.fromRGB(12, 12, 12)
	
	local ON_POS = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	-- Настройки Knife Range
	local EXTENDED_RANGE = 15 -- расширенный радиус ножа (вместо стандартного ~3)
	
	local isEnabled = false
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	
	-- Tween helper
	local function tween(obj, props, time)
		local info = TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		TweenService:Create(obj, info, props):Play()
	end
	
	-- Обновляем состояние UI Switcher
	local function updateSwitcherUI(enabled)
		if enabled then
			tween(switcher, {BackgroundColor3 = ON_COLOR}, 0.3)
			tween(switch, {Position = ON_POS, BackgroundColor3 = SWITCH_ON_COLOR}, 0.3)
			tween(knifeRangeFrame, {BackgroundColor3 = LABEL_ON_COLOR}, 0.3)
		else
			tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0.3)
			tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0.3)
			tween(knifeRangeFrame, {BackgroundColor3 = LABEL_OFF_COLOR}, 0.3)
		end
	end
	
	-- Основная функция проверки атаки в расширенном радиусе
	local function tryKnifeAttack()
		if not isEnabled then return end
		if not character or not humanoidRootPart then return end
	
		local origin = humanoidRootPart.Position
		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
				local targetHRP = player.Character.HumanoidRootPart
				local distance = (targetHRP.Position - origin).Magnitude
				if distance <= EXTENDED_RANGE then
					local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
					if humanoid and humanoid.Health > 0 then
						-- Наносим урон (пример 50 единиц)
						humanoid:TakeDamage(50)
						-- Можно добавить эффект или уведомление здесь
						print("Knife hit:", player.Name)
					end
				end
			end
		end
	end
	
	-- Подключаемся к событию мыши — для упрощения — на левый клик мыши
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			tryKnifeAttack()
		end
	end)
	
	-- Переключатель состояния
	switcher.MouseButton1Click:Connect(function()
		isEnabled = not isEnabled
		updateSwitcherUI(isEnabled)
	end)
	
	-- Инициализация UI
	updateSwitcherUI(isEnabled)
	
end
coroutine.wrap(AABF_fake_script)()
local function LPXOAB_fake_script() -- Switcher_10.DAmageMLTP 
	local script = Instance.new('LocalScript', Switcher_10)

	local TweenService = game:GetService("TweenService")
	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local UserInputService = game:GetService("UserInputService")
	
	local LocalPlayer = Players.LocalPlayer
	local gui = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenGui")
	local pagesFrame = gui.menu.PagesFrame
	local tab7Page = pagesFrame:WaitForChild("Tab7Page")
	
	local damageMultFrame = tab7Page:WaitForChild("DamageMultiplier") -- твоя панель
	local switcher = damageMultFrame:WaitForChild("Switcher") -- TextButton Switcher
	local switch = switcher:WaitForChild("Switch") -- Frame бегунок
	
	-- Цвета и позиции для Switcher
	local ON_COLOR = Color3.fromRGB(255, 255, 255)
	local OFF_COLOR = Color3.fromRGB(74, 74, 74)
	local SWITCH_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local SWITCH_OFF_COLOR = Color3.fromRGB(255, 255, 255)
	local LABEL_ON_COLOR = Color3.fromRGB(0, 71, 202)
	local LABEL_OFF_COLOR = Color3.fromRGB(12, 12, 12)
	
	local ON_POS = UDim2.new(0.522, 0, 0.179, 0)
	local OFF_POS = UDim2.new(0.131, 0, 0.179, 0)
	
	local isEnabled = false
	local DAMAGE_MULTIPLIER = 3 -- множитель урона
	local BASE_DAMAGE = 10 -- базовый урон, который умножается
	
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	
	local function tween(obj, props, time)
		local info = TweenInfo.new(time, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		TweenService:Create(obj, info, props):Play()
	end
	
	local function updateSwitcherUI(enabled)
		if enabled then
			tween(switcher, {BackgroundColor3 = ON_COLOR}, 0.3)
			tween(switch, {Position = ON_POS, BackgroundColor3 = SWITCH_ON_COLOR}, 0.3)
			tween(damageMultFrame, {BackgroundColor3 = LABEL_ON_COLOR}, 0.3)
		else
			tween(switcher, {BackgroundColor3 = OFF_COLOR}, 0.3)
			tween(switch, {Position = OFF_POS, BackgroundColor3 = SWITCH_OFF_COLOR}, 0.3)
			tween(damageMultFrame, {BackgroundColor3 = LABEL_OFF_COLOR}, 0.3)
		end
	end
	
	-- Функция нанесения урона с множителем
	local function dealDamage(targetHumanoid)
		if not targetHumanoid or targetHumanoid.Health <= 0 then return end
		local damage = BASE_DAMAGE
		if isEnabled then
			damage = damage * DAMAGE_MULTIPLIER
		end
		targetHumanoid:TakeDamage(damage)
	end
	
	-- Пример триггера урона — тут зависит от игры, как ты наносишь урон
	-- Для примера: при нажатии ЛКМ наносим урон ближайшему игроку в радиусе 5
	UserInputService.InputBegan:Connect(function(input, gameProcessed)
		if gameProcessed then return end
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			local origin = humanoidRootPart.Position
			local closestHumanoid = nil
			local shortestDist = math.huge
			for _, player in pairs(Players:GetPlayers()) do
				if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
					local hrp = player.Character.HumanoidRootPart
					local dist = (hrp.Position - origin).Magnitude
					if dist <= 5 then
						local hum = player.Character:FindFirstChildOfClass("Humanoid")
						if hum and hum.Health > 0 and dist < shortestDist then
							shortestDist = dist
							closestHumanoid = hum
						end
					end
				end
			end
	
			if closestHumanoid then
				dealDamage(closestHumanoid)
			end
		end
	end)
	
	switcher.MouseButton1Click:Connect(function()
		isEnabled = not isEnabled
		updateSwitcherUI(isEnabled)
	end)
	
	updateSwitcherUI(isEnabled)
	
end
coroutine.wrap(LPXOAB_fake_script)()
